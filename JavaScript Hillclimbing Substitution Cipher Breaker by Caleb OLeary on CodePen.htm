<!DOCTYPE html>
<!-- saved from url=(0087)https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker -->
<html lang="en" class="mac chrome78 js"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="viewport" content="width=device-width">
<meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="8yeWN2u3UE2WiroIFU4Z9A1YlgWYZRhX2+hisc7TQ6WEDwcwGXXOSj6sCRd+np5nWEwTdKbYnzFUniCqAvzTuw==">
<title>JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen</title>
<link href="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/css" rel="stylesheet">
<link rel="stylesheet" media="all" href="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/global-9e9de10da25eedee266b2dd7025c841e34a0a4eff03c01db90039707eb326069.css">
<link rel="stylesheet" media="all" href="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/page-681e69c2974748920f706ad93f06a9f6b5e6dbc94a084eec3da29fcfe6df8224.css">
<link rel="stylesheet" media="screen" href="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/2-42b156ea.chunk.css">
<link rel="stylesheet" media="screen" href="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/everypage-e8bb70ea.css">
<link rel="stylesheet" media="screen" href="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/post-884196e0828544aa98da2140e9e804dce28ef3d3109520b51a6d142ae3ed1c30.css">
<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@CodePen">
<meta name="twitter:title" content="JavaScript Hillclimbing Substitution Cipher Breaker">
<meta name="twitter:description" content="Hillclimbing/Genetic Mutating Function Demo &amp;amp; Tutorial View the full code here: https://github.com/caleboleary/Javascript_Hillclimb_Substitution_Cipher_Breaker Today I&#39;ll be walking you...">
<meta name="twitter:image" content="https://s.cdpn.io/profiles/user/231228/80.jpg?1">
<meta property="og:title" content="JavaScript Hillclimbing Substitution Cipher Breaker">
<meta property="og:type" content="article">
<meta property="og:description" content="Hillclimbing/Genetic Mutating Function Demo &amp;amp; Tutorial View the full code here: https://github.com/caleboleary/Javascript_Hillclimb_Substitution_Cipher_Breaker Today I&#39;ll be walking you...">
<meta property="og:image" content="https://s.cdpn.io/profiles/user/231228/80.jpg?1" itemprop="thumbnailUrl">
<meta property="og:url" content="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker">
<meta property="og:site_name" content="CodePen">
<meta property="article:author" content="Caleb OLeary">
<link rel="stylesheet" media="screen" href="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/twilight-1384711dde26dace772d921a7aec83b44bfe4bfda4f990cf1c049737be68ea70.css" id="cm-theme">
<link rel="shortcut icon" type="image/x-icon" href="https://static.codepen.io/assets/favicon/favicon-aec34940fbc1a6e787974dcd360f2c6b63348d4b1f4e06c77743096d55480f33.ico">
<link rel="mask-icon" type="" href="https://static.codepen.io/assets/favicon/logo-pin-8f3771b1072e3c38bd662872f6b673a722f4b3ca2421637d5596661b4e2132cc.svg" color="#111">
<script type="text/javascript" async="" src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/analytics.js"></script><script async="" src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/js"></script>
<script>/* Firefox needs this to prevent FOUC */</script>
<script charset="utf-8" src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/21-783792a0b2a16d30e18a.chunk.js"></script><script charset="utf-8" src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/firebase-f47e8322db0be8ac15eb.chunk.js"></script><script type="text/javascript" async="" src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/bsa.js"></script></head>
<body class="post-post
    logged-in



    not-team
">
<header id="main-sidebar" class="main-sidebar"><div class="Sidebar_root-2t9nF"><h1 class="Logo_root-3XNFn" data-test-id="logo"><a href="https://codepen.io/" class="Logo_small-3i6l6"><svg width="20" height="20" class=" icon icon-codepen-box"><use xlink:href="/svg_sprite?v=8885a907#codepen-box"></use></svg><span class="screen-reader-text">CodePen Home</span></a><a href="https://codepen.io/" class="Logo_large-3FckA"><svg width="20" height="20" class=" icon icon-logo" title="CodePen"><use xlink:href="/svg_sprite?v=8885a907#logo"></use></svg><span class="screen-reader-text">CodePen Home</span></a></h1><div><button class="SidebarToggle_root-JNUQt invisible-button" aria-expanded="true" data-collapsed="false" data-test-id="collapse-button" title="Toggle Sidebar"><div class="SidebarToggle_icon-30znX" aria-hidden="true"><span></span><svg width="20" height="20" class=" icon icon-arrow-down-mini"><use xlink:href="/svg_sprite?v=8885a907#arrow-down-mini"></use></svg></div><span class="screen-reader-text">Navigation Menu Toggle</span></button><div class="SidebarToggle_openBar-3Z4nP" data-collapsed="false"></div></div><nav role="navigation" class="navigation-wrap Sidebar_navigationWrap-1eN9p"><div class="Create_root-1iW7E"><h2 class="main-menu-create">Create</h2><ul class="Create_menu-1BUPB"><li class="Create_createPen-2GnOY"><a href="https://codepen.io/pen/" class="new-button Create_pen-3iR43"><svg width="20" height="20" class=" icon icon-icon-new-pen"><use xlink:href="/svg_sprite?v=8885a907#icon-new-pen"></use></svg>Pen</a><button class="Create_template-2ikcS" aria-expanded="false" data-test-id="new-pen-from-template">from template<svg width="20" height="20" class=" icon icon-arrow-down-mini"><use xlink:href="/svg_sprite?v=8885a907#arrow-down-mini"></use></svg></button></li><li><a href="https://codepen.io/project/" class="new-button Create_project-1ryPp"><svg width="20" height="20" class=" icon icon-icon-new-project"><use xlink:href="/svg_sprite?v=8885a907#icon-new-project"></use></svg>Project</a></li><li><a href="https://codepen.io/write/" class="new-button Create_post-1HOJq"><svg width="20" height="20" class=" icon icon-icon-new-post"><use xlink:href="/svg_sprite?v=8885a907#icon-new-post"></use></svg>Post</a></li><li><button data-test-id="sidebar-create-collection" class="new-button Create_collection-1Bske"><svg width="20" height="20" class=" icon icon-icon-new-collection"><use xlink:href="/svg_sprite?v=8885a907#icon-new-collection"></use></svg>Collection</button></li></ul></div><div><h2 class="main-menu-your">Your</h2><ul class="your-links-menu"><li class="primary-explore-link"><a href="https://codepen.io/dashboard/">Dashboard</a></li><li class="primary-explore-link"><a href="https://codepen.io/petixiuxx">Profile</a></li><li class="primary-explore-link"><button class="drawer-button" aria-haspopup="true" aria-expanded="false">Pinned Items</button><div class="drawer PinsDrawer_drawer-1Qbdu Drawer_root-3dt6g"><button class="Drawer_close-3Z9P-"><svg width="20" height="20" class=" icon icon-arrow-down-mini"><use xlink:href="/svg_sprite?v=8885a907#arrow-down-mini"></use></svg></button><h3>Pinned Items</h3><p class="no-pins-yet">You don't have any <a href="https://blog.codepen.io/documentation/features/pinned-items/" class="docs-link" target="_blank" rel="noopener noreferrer">pinned items</a> yet. You can pin any Pen, Post, or Collection (from their respective pages) for easy access here.</p></div></li><li class="primary-explore-link"><button class="drawer-button" aria-haspopup="true" aria-expanded="false">Activity</button><div class="drawer Drawer_root-3dt6g"><button class="Drawer_close-3Z9P-"><svg width="20" height="20" class=" icon icon-arrow-down-mini"><use xlink:href="/svg_sprite?v=8885a907#arrow-down-mini"></use></svg></button><h3>Activity</h3></div></li></ul></div><h2 class="main-menu-explore">Explore</h2><ul class="explore-links-menu"><li class="primary-explore-link"><a href="https://codepen.io/picks/pens/">Picks</a></li><li class="primary-explore-link"><a href="https://codepen.io/popular/pens/">Popular</a></li><li class="primary-explore-link"><a href="https://codepen.io/following/pens/">Following</a></li><li class="primary-explore-link"><a href="https://codepen.io/topics/">Topics</a></li></ul><h2 class="main-menu-grow">Grow</h2><ul class="explore-links-menu"><li class="primary-explore-link"><a href="https://codepen.io/jobs/">Jobs</a></li><li class="primary-explore-link"><a href="https://codepen.io/pro" data-test-id="go-pro-sidebar" style="display: block;">CodePen <span class="badge badge-pro">PRO</span></a></li><li class="primary-explore-link"><a href="https://codepen.io/challenges/">Challenges</a></li></ul><ul class="explore-links-menu"><li><a href="https://codepen.io/spark/">Newsletter</a></li><li><a href="https://blog.codepen.io/">Blog</a></li><li><a href="https://blog.codepen.io/documentation/">Docs &amp; Support</a></li></ul><div class="SidebarAd_root-PH2LM" id="sidebar-ad"><script src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/carbon.js" async="" id="_carbonads_js"></script></div></nav></div></header>
<div id="react-search-and-user-menu"><div class="SearchAndUser_searchAndUserMenu-EFfCJ"><div class="SearchExpander_search-yHTK3"><form aria-labelledby="search-title" data-test-id="search-form" class="search-form search-form-header" action="https://codepen.io/search/pens?q=null/"><label class="search-input-wrap"><h1 id="search-title" class="screen-reader-text">Search</h1><svg width="20" height="20" class=" icon icon-mag"><use xlink:href="/svg_sprite?v=8885a907#mag"></use></svg><input type="search" name="q" class="search-input" placeholder="Search CodePen..." data-test-id="search-input" value=""></label></form><div class="SearchExpander_searchExpander-1vdOo" data-open="false"><div><div class="SearchTypeFilterLinks_searchFilters-1GGrn"><a class="button button button-medium SearchTypeFilterLinks_filter-2KNh2 type-pens" href="https://codepen.io/search/pens" data-search-type="Pens" data-active="true"><svg width="20" height="20" class=" icon icon-icon-new-pen"><use xlink:href="/svg_sprite?v=8885a907#icon-new-pen"></use></svg>Pens</a><a class="button button button-medium SearchTypeFilterLinks_filter-2KNh2 type-projects" href="https://codepen.io/search/projects" data-search-type="Projects" data-active="false"><svg width="20" height="20" class=" icon icon-icon-new-project"><use xlink:href="/svg_sprite?v=8885a907#icon-new-project"></use></svg>Projects</a><a class="button button button-medium SearchTypeFilterLinks_filter-2KNh2 type-posts" href="https://codepen.io/search/posts" data-search-type="Posts" data-active="false"><svg width="20" height="20" class=" icon icon-icon-new-post"><use xlink:href="/svg_sprite?v=8885a907#icon-new-post"></use></svg>Posts</a><a class="button button button-medium SearchTypeFilterLinks_filter-2KNh2 type-collections" href="https://codepen.io/search/collections" data-search-type="Collections" data-active="false"><svg width="20" height="20" class=" icon icon-icon-new-collection"><use xlink:href="/svg_sprite?v=8885a907#icon-new-collection"></use></svg>Collections</a></div><div class="SearchPopular_root-1qVeY"><h4>Popular Searches</h4><a href="https://codepen.io/search/posts?q=canvas" class="button button-medium">Canvas Posts</a><a href="https://codepen.io/search/projects?q=vue" class="button button-medium">Vue Projects</a><a href="https://codepen.io/search/posts?q=accessibility" class="button button-medium">Accessibility Posts</a><a href="https://codepen.io/search/posts?q=web%20audio" class="button button-medium">Web Audio Posts</a><a href="https://codepen.io/search/collections?q=games" class="button button-medium">Game Collections</a><a href="https://codepen.io/search/pens?q=grid" class="button button-medium">Grid Pens</a></div></div></div></div><div class="UserMenu_userMenuDropdownParent-5tsjj"><nav title="User Menu"><button class="UserMenu_userMenuButton-38sVN invisible-button" aria-haspopup="true" aria-expanded="false" data-test-id="user-menu-button"><img src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/a5e27fb218b1c4e709da8784e6911fee" width="44" height="44" class="user-avatar" alt="User Avatar" data-test-id="user-avatar"><span class="screen-reader-text">User Menu</span></button><ul class="UserMenu_userMenu-3E8E-" data-open="false" data-test-id="user-menu"></ul></nav></div></div></div>
<main>
<article class="post">
<header class="post-header mega-header">
<div class="width-wrapper">
<h1 class="post-title" data-test-id="post-title">JavaScript Hillclimbing Substitution Cipher Breaker</h1>
<div class="content-author">
<a class="avatar-push" href="https://codepen.io/caleboleary/">
<img src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/80.jpg" alt="" width="20" height="20" class="user-avatar">
</a>
<a href="https://codepen.io/caleboleary/">
Caleb OLeary
</a><a href="https://codepen.io/pro/" class="pro-link">
<span class="badge badge-pro">Pro</span>
</a>

<div style="display: inline" id="react-follow-user" data-id="eQNzdR" data-type="USER"><button class="FollowButton_followButton-2frIy mini-button follow-user-button FollowButton_following-2f7K9" data-test="follow-button" data-following="true" title="You are following undefined. Unfollow?"><span class="FollowButton_iconArea-YciNl"><svg width="20" height="20" class="FollowButton_statusIcon-1iDOg icon icon-check"><use xlink:href="/svg_sprite?v=8885a907#check"></use></svg><svg width="20" height="20" class="FollowButton_unfollowIcon-2d1tY icon icon-x"><use xlink:href="/svg_sprite?v=8885a907#x"></use></svg></span> Following</button></div>
<span class="blog-meta-spacer">|</span>
<a href="https://codepen.io/caleboleary/posts/published/">
<strong>Caleb OLeary's Posts</strong>
</a>
</div>
<div class="actions-meta">
<div class="meta-line">
<time class="date-block" title="Last updated on Jun  4, 2016">Jun 3, 2016</time>
</div>
<div class="post-meta-line post-meta-line-hearter">
<a href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker#0" id="loves_ZeVEJn" data-item="post" data-hashid="ZeVEJn" class="button button-medium hearter big-hearter heart-button loves loved-1">
<svg class="icon-heart">
<use xlink:href="/svg_sprite?v=8885a907#heart"></use>
</svg>
<svg class="icon-heart icon-animator">
<use xlink:href="/svg_sprite?v=8885a907#heart"></use>
</svg>
</a>
</div>
</div>
</div>
</header>
<div class="blog-post">
<div class="width-wrapper">
<div class="post-content">
<section class="post-body">
<h1><a class="article-headline-link" href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker#hillclimbinggenetic-mutating-function-demo-and-tutorial-0" id="hillclimbinggenetic-mutating-function-demo-and-tutorial-0">#</a>Hillclimbing/Genetic Mutating Function Demo &amp; Tutorial</h1>
<p>View the full code here: <a href="https://github.com/caleboleary/Javascript_Hillclimb_Substitution_Cipher_Breaker">https://github.com/caleboleary/Javascript_Hillclimb_Substitution_Cipher_Breaker</a></p>
<p>Today I'll be walking you through a programming techinque called 'hillclimbing', and how we can use it with genetic mutating functions to solve problems that seem like they'd take a huge amount of time, or a real human to break.</p>
<p>Hillclimbing at it's core is meant to find something called the 'local maxima'. Imagine a chart with several peaks and valleys, one way to find the highest peak would be to pick a random position and start going up. You may end up at a peak that isn't the highest, but chances are, if you did this enough times you'd find the tallest peak. The below code repeats this process 100 times and returns the highest peak it found.</p>
<p>Here's a quick example in JavaScript showing something like what I described:</p>
<div class="box"><pre class="has-code">  <code class="sh cm-s-default"><span class="cm-keyword">var</span> <span class="cm-def">dataSet</span> <span class="cm-operator">=</span> [<span class="cm-number">3</span>,<span class="cm-number">15</span>,<span class="cm-number">25</span>,<span class="cm-number">67</span>,<span class="cm-number">68</span>,<span class="cm-number">54</span>,<span class="cm-number">32</span>,<span class="cm-number">12</span>,<span class="cm-number">56</span>,<span class="cm-number">69</span>,<span class="cm-number">70</span>,<span class="cm-number">57</span>,<span class="cm-number">43</span>,<span class="cm-number">32</span>,<span class="cm-number">12</span>,<span class="cm-number">34</span>,<span class="cm-number">54</span>,<span class="cm-number">25</span>,<span class="cm-number">10</span>,<span class="cm-number">3</span>];<br><span class="cm-keyword">var</span> <span class="cm-def">peaks</span> <span class="cm-operator">=</span> [];<br><span class="cm-keyword">var</span> <span class="cm-def">iterations</span> <span class="cm-operator">=</span> <span class="cm-number">100</span>;<br><span class="cm-keyword">for</span> (<span class="cm-keyword">var</span> <span class="cm-def">i</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>; <span class="cm-variable">i</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">iterations</span>; <span class="cm-variable">i</span><span class="cm-operator">++</span>) {<br>    <span class="cm-keyword">var</span> <span class="cm-def">random</span> <span class="cm-operator">=</span> <span class="cm-variable">Math</span>.<span class="cm-property">floor</span>(<span class="cm-variable">Math</span>.<span class="cm-property">random</span>() <span class="cm-operator">*</span> <span class="cm-variable">dataSet</span>.<span class="cm-property">length</span><span class="cm-operator">-</span><span class="cm-number">1</span>) <span class="cm-operator">+</span> <span class="cm-number">1</span>;<br>    <span class="cm-keyword">var</span> <span class="cm-def">letsClimb</span> <span class="cm-operator">=</span> <span class="cm-atom">true</span>;<br>    <span class="cm-keyword">while</span> (<span class="cm-variable">letsClimb</span>) {<br>        <span class="cm-keyword">if</span> (<span class="cm-keyword">typeof</span> <span class="cm-variable">dataSet</span>[<span class="cm-variable">random</span> <span class="cm-operator">+</span> <span class="cm-number">1</span>] <span class="cm-operator">!==</span> <span class="cm-string">'undefined'</span> <span class="cm-operator">&amp;</span><span class="cm-operator">&amp;</span> <span class="cm-variable">dataSet</span>[<span class="cm-variable">random</span> <span class="cm-operator">+</span> <span class="cm-number">1</span>] <span class="cm-operator">&gt;</span> <span class="cm-variable">dataSet</span>[<span class="cm-variable">random</span>]) {<br>            <span class="cm-variable">random</span><span class="cm-operator">++</span>;<br>        }<br>        <span class="cm-keyword">else</span> <span class="cm-keyword">if</span> (<span class="cm-keyword">typeof</span> <span class="cm-variable">dataSet</span>[<span class="cm-variable">random</span> <span class="cm-operator">-</span> <span class="cm-number">1</span>] <span class="cm-operator">!==</span> <span class="cm-string">'undefined'</span> <span class="cm-operator">&amp;</span><span class="cm-operator">&amp;</span> <span class="cm-variable">dataSet</span>[<span class="cm-variable">random</span> <span class="cm-operator">-</span> <span class="cm-number">1</span>] <span class="cm-operator">&gt;</span> <span class="cm-variable">dataSet</span>[<span class="cm-variable">random</span>]) {<br>            <span class="cm-variable">random</span><span class="cm-operator">--</span>;<br>        }<br>        <span class="cm-keyword">else</span> {<br>            <span class="cm-variable">peaks</span>.<span class="cm-property">push</span>(<span class="cm-variable">dataSet</span>[<span class="cm-variable">random</span>]);<br>            <span class="cm-variable">letsClimb</span> <span class="cm-operator">=</span> <span class="cm-atom">false</span>;<br>        }<br>    }<br>}<br><span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-variable">peaks</span>.<span class="cm-property">sort</span>()[<span class="cm-variable">peaks</span>.<span class="cm-property">length</span><span class="cm-operator">-</span><span class="cm-number">1</span>]);<br></code>
</pre></div>
<p>Here's a visual representation:</p>
<p></p><div class="cp_embed_wrapper"><iframe name="cp_embed_1" src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/ezNvWm.html" scrolling="no" frameborder="0" height="300" allowtransparency="true" allowfullscreen="true" allowpaymentrequest="true" title="CodePen Embed" class="cp_embed_iframe " style="width: 100%; overflow:hidden; display:block;" id="cp_embed_ezNvWm"></iframe></div>
<p>Now we know this isn't the best way to find the highest point, but bear with me, because there are instances where this strategy does come in handy.</p>
<p>So when is this random searching useful? Enter the Substitution Cipher. Using the english alphabet,
messages can be encoded with up to 400 septillion (after trillion, quadrillion, quintillion, and sextillion -- this number: 403291461126605635584000000) different keys.</p>
<p>Say we have the following message, pulled from Simon Singh's 'The Code Book' (excellent read) which is encoded with a random
substitution cipher. Every letter has been replaced by one letter throughout the whole test, for example we've replaced
every 'a' with 'x', every 'b' with 'd' or something like that, no rhyme or reason, and not in alphabetical order (that would be a Caesar Cipher, much easier to break).</p>
<p>BT JPX RMLX PCUV AMLX ICVJP IBTWXVR CI M LMT’R PMTN, MTN YVCJX CDXV MWMBTRJ JPX AMTNGXRJBAH UQCT JPX QGMRJXV CI JPX
YMGG CI JPX HBTW’R QMGMAX; MTN JPX HBTW RMY JPX QMVJ CI JPX PMTN JPMJ YVCJX. JPXT JPX HBTW’R ACUTJXTMTAX YMR APMTWXN,
MTN PBR JPCUWPJR JVCUFGXN PBL, RC JPMJ JPX SCBTJR CI PBR GCBTR YXVX GCCRXN, MTN PBR HTXXR RLCJX CTX MWMBTRJ MTCJPXV.
JPX HBTW AVBXN MGCUN JC FVBTW BT JPX MRJVCGCWXVR, JPX APMGNXMTR, MTN JPX RCCJPRMEXVR. MTN JPX HBTW RQMHX, MTN RMBN JC
JPX YBRX LXT CI FMFEGCT, YPCRCXDXV RPMGG VXMN JPBR YVBJBTW, MTN RPCY LX JPX BTJXVQVXJMJBCT JPXVXCI, RPMGG FX AGCJPXN YBJP RAM</p>
<p>Now, there are definitely techniques out there to solve this by hand, but how could we apply a shotgun hillclimb approach here, and solve this with a computer so we don't have to think? (Shotgun hillclimb is the type of hillclimbing where we don't just find 1 local maxima, but many at random intervals and take the best, like doing that hillclimb above 100 times.) A total random search would involve us testing 400 septillion keys, which seems a sight impractical.</p>
<p>Imagine that visual representation above was expanded to include a bar for every possible decryption of the ciphertext, so 400 septillion values. The height in this figurative graph is relative to how legible the decoded message is with that specific key. We can imagine that this graph would be pretty average except for one massive peak where the right key is, and a very legible result, with the occasional small peak indicating a fluke that ends up creating a couple words even when they aren't right. We want to shotgun hillclimb on this massive graph, and get the right value without searching through every value, or even many values.</p>
<p>We'll need a few things set up before our computers can crack this code unaided, let's check out the recipe:</p>
<div class="box"><pre class="has-code">  <code class=" cm-s-default"><span class="cm-operator">--</span><span class="cm-variable">Decoding</span> <span class="cm-keyword">function</span> <span class="cm-operator">-</span> <span class="cm-variable">we</span> <span class="cm-variable">need</span> <span class="cm-variable">a</span> <span class="cm-keyword">function</span> <span class="cm-def">that</span> <span class="cm-def">decodes</span> <span class="cm-keyword">this</span> <span class="cm-variable">message</span> <span class="cm-keyword">for</span> <span class="cm-variable">a</span> <span class="cm-variable">given</span> <span class="cm-variable">key</span>. <span class="cm-property">We</span> <span class="cm-variable">can</span> <span class="cm-keyword">try</span> <span class="cm-variable">many</span> <span class="cm-variable">keys</span>, <span class="cm-variable">and</span> <span class="cm-variable">evaluate</span> <span class="cm-variable">the</span> <span class="cm-variable">deciphered</span> <span class="cm-variable">message</span> <span class="cm-variable">to</span> <span class="cm-variable">see</span> <span class="cm-keyword">if</span> <span class="cm-variable">it</span><span class="cm-string">'s legible.</span><br><span class="cm-operator">--</span><span class="cm-variable">Dictionary</span> <span class="cm-operator">-</span> <span class="cm-variable">we</span> <span class="cm-variable">need</span> <span class="cm-variable">a</span> <span class="cm-variable">way</span> <span class="cm-variable">to</span> <span class="cm-variable">decide</span> <span class="cm-keyword">if</span> <span class="cm-variable">our</span> <span class="cm-variable">random</span> <span class="cm-variable">key</span> <span class="cm-variable">resulted</span> <span class="cm-keyword">in</span> <span class="cm-variable">any</span> <span class="cm-variable">non</span><span class="cm-operator">-</span><span class="cm-variable">gibberish</span>, <span class="cm-keyword">let</span><span class="cm-string">'s do the top 1000 english words. (Or whatever language we'</span><span class="cm-variable">re</span> <span class="cm-variable">cracking</span>).<br><span class="cm-operator">--</span><span class="cm-variable">Scoring</span> <span class="cm-keyword">function</span> <span class="cm-operator">-</span> <span class="cm-variable">use</span> <span class="cm-variable">our</span> <span class="cm-variable">dictionary</span> <span class="cm-variable">to</span> <span class="cm-variable">give</span> <span class="cm-variable">us</span> <span class="cm-variable">a</span> <span class="cm-string">'score'</span> <span class="cm-keyword">for</span> <span class="cm-variable">how</span> <span class="cm-variable">well</span> <span class="cm-variable">the</span> <span class="cm-variable">key</span> <span class="cm-variable">does</span>.<br><span class="cm-operator">--</span><span class="cm-variable">Mutator</span> <span class="cm-keyword">function</span> <span class="cm-operator">-</span> <span class="cm-variable">take</span> <span class="cm-variable">a</span> <span class="cm-variable">good</span> <span class="cm-variable">key</span> <span class="cm-keyword">in</span>, <span class="cm-variable">and</span> <span class="cm-keyword">return</span> <span class="cm-variable">a</span> <span class="cm-variable">lot</span> <span class="cm-variable">of</span> <span class="cm-variable">slightly</span> <span class="cm-variable">altered</span> <span class="cm-variable">ones</span> <span class="cm-variable">to</span> <span class="cm-variable">test</span>. <span class="cm-property">Hopefully</span> <span class="cm-keyword">this</span> <span class="cm-variable">will</span> <span class="cm-variable">result</span> <span class="cm-keyword">in</span> <span class="cm-variable">us</span> <span class="cm-variable">moving</span> <span class="cm-variable">closer</span> <span class="cm-variable">to</span> <span class="cm-variable">the</span> <span class="cm-variable">real</span> <span class="cm-variable">key</span>.<br><span class="cm-operator">--</span><span class="cm-variable">Starting</span> <span class="cm-variable">Point</span> <span class="cm-variable">Function</span> <span class="cm-operator">-</span> <span class="cm-variable">A</span> <span class="cm-variable">good</span> <span class="cm-variable">place</span> <span class="cm-variable">to</span> <span class="cm-variable">start</span> <span class="cm-variable">looking</span>, <span class="cm-variable">lets</span> <span class="cm-variable">make</span> <span class="cm-variable">a</span> <span class="cm-variable">key</span> <span class="cm-variable">that</span> <span class="cm-variable">would</span> <span class="cm-variable">be</span> <span class="cm-variable">right</span> <span class="cm-keyword">if</span> <span class="cm-variable">the</span> <span class="cm-variable">message</span> <span class="cm-variable">had</span> <span class="cm-variable">the</span> <span class="cm-variable">exact</span> <span class="cm-variable">letter</span> <span class="cm-variable">distribution</span> <span class="cm-variable">as</span> <span class="cm-variable">normal</span> <span class="cm-variable">English</span>. <span class="cm-property">This</span> <span class="cm-variable">will</span> <span class="cm-variable">be</span> <span class="cm-variable">a</span> <span class="cm-variable">great</span> <span class="cm-variable">place</span> <span class="cm-variable">to</span> <span class="cm-variable">mutate</span> <span class="cm-variable">from</span>.<br><span class="cm-operator">--</span><span class="cm-variable">Controller</span> <span class="cm-operator">-</span> <span class="cm-variable">a</span> <span class="cm-keyword">function</span> <span class="cm-def">to</span> <span class="cm-def">generate</span> <span class="cm-def">keys</span>, <span class="cm-variable">test</span> <span class="cm-variable">them</span> <span class="cm-variable">all</span>, <span class="cm-variable">pick</span> <span class="cm-variable">the</span> <span class="cm-variable">best</span> <span class="cm-variable">using</span> <span class="cm-variable">the</span> <span class="cm-variable">scores</span>, <span class="cm-variable">and</span> <span class="cm-variable">mutate</span><span class="cm-operator">/</span><span class="cm-variable">generate</span> <span class="cm-variable">more</span> <span class="cm-keyword">for</span> <span class="cm-variable">testing</span><br></code>
</pre></div>
<p>Let's see the pieces:</p>
<h3><a class="article-headline-link" href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker#decoding-function-1" id="decoding-function-1">#</a>Decoding Function</h3>
<div class="box"><pre class="has-code">  <code class="sh cm-s-default"><span class="cm-keyword">function</span> <span class="cm-def">deSubstitute</span>(<span class="cm-def">str</span>,<span class="cm-def">key</span>){<br>    <span class="cm-keyword">return</span> <span class="cm-variable-2">str</span>.<span class="cm-property">split</span>(<span class="cm-string">''</span>).<span class="cm-property">map</span>(<span class="cm-keyword">function</span>(<span class="cm-def">letter</span>){<br>        <span class="cm-keyword">if</span> (<span class="cm-variable-2">letter</span>.<span class="cm-property">match</span>(<span class="cm-string-2">/^[a-z]*$/g</span>)) {<br>            <span class="cm-keyword">return</span> <span class="cm-variable">String</span>.<span class="cm-property">fromCharCode</span>(<span class="cm-variable-2">key</span>.<span class="cm-property">indexOf</span>(<span class="cm-variable-2">letter</span>)<span class="cm-operator">+</span><span class="cm-number">97</span>);<br>        }<br>        <span class="cm-keyword">else</span> <span class="cm-keyword">if</span> (<span class="cm-variable-2">letter</span>.<span class="cm-property">match</span>(<span class="cm-string-2">/^[A-Z]*$/g</span>)) {<br>            <span class="cm-keyword">return</span> <span class="cm-variable">String</span>.<span class="cm-property">fromCharCode</span>(<span class="cm-variable-2">key</span>.<span class="cm-property">indexOf</span>(<span class="cm-variable-2">letter</span>.<span class="cm-property">toLowerCase</span>())<span class="cm-operator">+</span><span class="cm-number">65</span>);<br>        }<br>        <span class="cm-keyword">return</span> <span class="cm-variable-2">letter</span>;<br>    }).<span class="cm-property">join</span>(<span class="cm-string">''</span>);<br>}   <br></code>
</pre></div>
<p>This function takes in a string and a key, and shifts each letter as if it were a subsitution cipher, and the key the correct key, returning the deciphered string.</p>
<h3><a class="article-headline-link" href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker#dictionary-2" id="dictionary-2">#</a>Dictionary</h3>
<div class="box"><pre class="has-code">  <code class="sh cm-s-default"><span class="cm-keyword">var</span> <span class="cm-def">mostCommon</span> <span class="cm-operator">=</span> [<span class="cm-string">'the'</span>,<span class="cm-string">'of'</span>,<span class="cm-string">'to'</span>,<span class="cm-string">'and'</span>,<span class="cm-string">'a'</span>,<span class="cm-string">'in'</span>,<span class="cm-string">'is'</span>,<span class="cm-string">'it'</span>,<span class="cm-string">'you'</span>,<span class="cm-string">'that'</span>,<span class="cm-string">'he'</span>,<span class="cm-string">'was'</span>,<span class="cm-string">'for'</span>,<span class="cm-string">'on'</span>,<span class="cm-string">'are'</span>,<span class="cm-string">'with'</span>,<span class="cm-string">'as'</span>,<span class="cm-string">'I'</span>,<span class="cm-string">'his'</span>,<span class="cm-string">'they'</span>,<span class="cm-string">'be'</span>,<span class="cm-string">'at'</span>,<span class="cm-string">'one'</span>,<span class="cm-string">'have'</span>,<span class="cm-string">'this'</span>,<span class="cm-string">'from'</span>,<span class="cm-string">'or'</span>,<span class="cm-string">'had'</span>,<span class="cm-string">'by'</span>,<span class="cm-string">'hot'</span>,<span class="cm-string">'word'</span>,<span class="cm-string">'but'</span>,<span class="cm-string">'what'</span>,<span class="cm-string">'some'</span>,<span class="cm-string">'we'</span>,<span class="cm-string">'can'</span>,<span class="cm-string">'out'</span>,<span class="cm-string">'other'</span>,<span class="cm-string">'were'</span>,<span class="cm-string">'all'</span>,<span class="cm-string">'there'</span>,<span class="cm-string">'when'</span>,<span class="cm-string">'up'</span>,<span class="cm-string">'use'</span>,<span class="cm-string">'your'</span>,<span class="cm-string">'how'</span>,<span class="cm-string">'said'</span>,<span class="cm-string">'an'</span>,<span class="cm-string">'each'</span>,<span class="cm-string">'she'</span>,<span class="cm-string">'which'</span>,<span class="cm-string">'do'</span>,<span class="cm-string">'their'</span>,<span class="cm-string">'time'</span>,<span class="cm-string">'if'</span>,<span class="cm-string">'will'</span>,<span class="cm-string">'way'</span>,<span class="cm-string">'about'</span>,<span class="cm-string">'many'</span>,<span class="cm-string">'then'</span>,<span class="cm-string">'them'</span>,<span class="cm-string">'write'</span>,<span class="cm-string">'would'</span>,<span class="cm-string">'like'</span>,<span class="cm-string">'so'</span>,<span class="cm-string">'these'</span>,<span class="cm-string">'her'</span>,<span class="cm-string">'long'</span>,<span class="cm-string">'make'</span>,<span class="cm-string">'thing'</span>,<span class="cm-string">'see'</span>,<span class="cm-string">'him'</span>,<span class="cm-string">'two'</span>,<span class="cm-string">'has'</span>,<span class="cm-string">'look'</span>,<span class="cm-string">'more'</span>,<span class="cm-string">'day'</span>,<span class="cm-string">'could'</span>,<span class="cm-string">'go'</span>,<span class="cm-string">'come'</span>,<span class="cm-string">'did'</span>,<span class="cm-string">'number'</span>,<span class="cm-string">'sound'</span>,<span class="cm-string">'no'</span>,<span class="cm-string">'most'</span>,<span class="cm-string">'people'</span>,<span class="cm-string">'my'</span>,<span class="cm-string">'over'</span>,<span class="cm-string">'know'</span>,<span class="cm-string">'water'</span>,<span class="cm-string">'than'</span>,<span class="cm-string">'call'</span>,<span class="cm-string">'first'</span>,<span class="cm-string">'who'</span>,<span class="cm-string">'may'</span>,<span class="cm-string">'down'</span>,<span class="cm-string">'side'</span>,<span class="cm-string">'been'</span>,<span class="cm-string">'now'</span>,<span class="cm-string">'find'</span>,<span class="cm-string">'any'</span>,<span class="cm-string">'new'</span>,<span class="cm-string">'work'</span>,<span class="cm-string">'part'</span>,<span class="cm-string">'take'</span>,<span class="cm-string">'get'</span>,<span class="cm-string">'place'</span>,<span class="cm-string">'made'</span>,<span class="cm-string">'live'</span>,<span class="cm-string">'where'</span>,<span class="cm-string">'after'</span>,<span class="cm-string">'back'</span>,<span class="cm-string">'little'</span>,<span class="cm-string">'only'</span>,<span class="cm-string">'round'</span>,<span class="cm-string">'man'</span>,<span class="cm-string">'year'</span>,<span class="cm-string">'came'</span>,<span class="cm-string">'show'</span>,<span class="cm-string">'every'</span>,<span class="cm-string">'good'</span>,<span class="cm-string">'me'</span>,<span class="cm-string">'give'</span>,<span class="cm-string">'our'</span>,<span class="cm-string">'under'</span>,<span class="cm-string">'name'</span>,<span class="cm-string">'very'</span>,<span class="cm-string">'through'</span>,<span class="cm-string">'just'</span>,<span class="cm-string">'form'</span>,<span class="cm-string">'sentence'</span>,<span class="cm-string">'great'</span>,<span class="cm-string">'think'</span>,<span class="cm-string">'say'</span>,<span class="cm-string">'help'</span>,<span class="cm-string">'low'</span>,<span class="cm-string">'line'</span>,<span class="cm-string">'differ'</span>,<span class="cm-string">'turn'</span>,<span class="cm-string">'cause'</span>,<span class="cm-string">'much'</span>,<span class="cm-string">'mean'</span>,<span class="cm-string">'before'</span>,<span class="cm-string">'move'</span>,<span class="cm-string">'right'</span>,<span class="cm-string">'boy'</span>,<span class="cm-string">'old'</span>,<span class="cm-string">'too'</span>,<span class="cm-string">'same'</span>,<span class="cm-string">'tell'</span>,<span class="cm-string">'does'</span>,<span class="cm-string">'set'</span>,<span class="cm-string">'three'</span>,<span class="cm-string">'want'</span>,<span class="cm-string">'air'</span>,<span class="cm-string">'well'</span>,<span class="cm-string">'also'</span>,<span class="cm-string">'play'</span>,<span class="cm-string">'small'</span>,<span class="cm-string">'end'</span>,<span class="cm-string">'put'</span>,<span class="cm-string">'home'</span>,<span class="cm-string">'read'</span>,<span class="cm-string">'hand'</span>,<span class="cm-string">'port'</span>,<span class="cm-string">'large'</span>,<span class="cm-string">'spell'</span>,<span class="cm-string">'add'</span>,<span class="cm-string">'even'</span>,<span class="cm-string">'land'</span>,<span class="cm-string">'here'</span>,<span class="cm-string">'must'</span>,<span class="cm-string">'big'</span>,<span class="cm-string">'high'</span>,<span class="cm-string">'such'</span>,<span class="cm-string">'follow'</span>,<span class="cm-string">'act'</span>,<span class="cm-string">'why'</span>,<span class="cm-string">'ask'</span>,<span class="cm-string">'men'</span>,<span class="cm-string">'change'</span>,<span class="cm-string">'went'</span>,<span class="cm-string">'light'</span>,<span class="cm-string">'kind'</span>,<span class="cm-string">'off'</span>,<span class="cm-string">'need'</span>,<span class="cm-string">'house'</span>,<span class="cm-string">'picture'</span>,<span class="cm-string">'try'</span>,<span class="cm-string">'us'</span>,<span class="cm-string">'again'</span>,<span class="cm-string">'animal'</span>,<span class="cm-string">'point'</span>,<span class="cm-string">'mother'</span>,<span class="cm-string">'world'</span>,<span class="cm-string">'near'</span>,<span class="cm-string">'build'</span>,<span class="cm-string">'self'</span>,<span class="cm-string">'earth'</span>,<span class="cm-string">'father'</span>,<span class="cm-string">'head'</span>,<span class="cm-string">'stand'</span>,<span class="cm-string">'own'</span>,<span class="cm-string">'page'</span>,<span class="cm-string">'should'</span>,<span class="cm-string">'country'</span>,<span class="cm-string">'found'</span>,<span class="cm-string">'answer'</span>,<span class="cm-string">'school'</span>,<span class="cm-string">'grow'</span>,<span class="cm-string">'study'</span>,<span class="cm-string">'still'</span>,<span class="cm-string">'learn'</span>,<span class="cm-string">'plant'</span>,<span class="cm-string">'cover'</span>,<span class="cm-string">'food'</span>,<span class="cm-string">'sun'</span>,<span class="cm-string">'four'</span>,<span class="cm-string">'between'</span>,<span class="cm-string">'state'</span>,<span class="cm-string">'keep'</span>,<span class="cm-string">'eye'</span>,<span class="cm-string">'never'</span>,<span class="cm-string">'last'</span>,<span class="cm-string">'let'</span>,<span class="cm-string">'thought'</span>,<span class="cm-string">'city'</span>,<span class="cm-string">'tree'</span>,<span class="cm-string">'cross'</span>,<span class="cm-string">'farm'</span>,<span class="cm-string">'hard'</span>,<span class="cm-string">'start'</span>,<span class="cm-string">'might'</span>,<span class="cm-string">'story'</span>,<span class="cm-string">'saw'</span>,<span class="cm-string">'far'</span>,<span class="cm-string">'sea'</span>,<span class="cm-string">'draw'</span>,<span class="cm-string">'left'</span>,<span class="cm-string">'late'</span>,<span class="cm-string">'run'</span>,<span class="cm-string">'dont'</span>,<span class="cm-string">'while'</span>,<span class="cm-string">'press'</span>,<span class="cm-string">'close'</span>,<span class="cm-string">'night'</span>,<span class="cm-string">'real'</span>,<span class="cm-string">'life'</span>,<span class="cm-string">'few'</span>,<span class="cm-string">'north'</span>,<span class="cm-string">'open'</span>,<span class="cm-string">'seem'</span>,<span class="cm-string">'together'</span>,<span class="cm-string">'next'</span>,<span class="cm-string">'white'</span>,<span class="cm-string">'children'</span>,<span class="cm-string">'begin'</span>,<span class="cm-string">'got'</span>,<span class="cm-string">'walk'</span>,<span class="cm-string">'example'</span>,<span class="cm-string">'ease'</span>,<span class="cm-string">'paper'</span>,<span class="cm-string">'group'</span>,<span class="cm-string">'always'</span>,<span class="cm-string">'music'</span>,<span class="cm-string">'those'</span>,<span class="cm-string">'both'</span>,<span class="cm-string">'mark'</span>,<span class="cm-string">'often'</span>,<span class="cm-string">'letter'</span>,<span class="cm-string">'until'</span>,<span class="cm-string">'mile'</span>,<span class="cm-string">'river'</span>,<span class="cm-string">'car'</span>,<span class="cm-string">'feet'</span>,<span class="cm-string">'care'</span>,<span class="cm-string">'second'</span>,<span class="cm-string">'book'</span>,<span class="cm-string">'carry'</span>,<span class="cm-string">'took'</span>,<span class="cm-string">'science'</span>,<span class="cm-string">'eat'</span>,<span class="cm-string">'room'</span>,<span class="cm-string">'friend'</span>,<span class="cm-string">'began'</span>,<span class="cm-string">'idea'</span>,<span class="cm-string">'fish'</span>,<span class="cm-string">'mountain'</span>,<span class="cm-string">'stop'</span>,<span class="cm-string">'once'</span>,<span class="cm-string">'base'</span>,<span class="cm-string">'hear'</span>,<span class="cm-string">'horse'</span>,<span class="cm-string">'cut'</span>,<span class="cm-string">'sure'</span>,<span class="cm-string">'watch'</span>,<span class="cm-string">'color'</span>,<span class="cm-string">'face'</span>,<span class="cm-string">'wood'</span>,<span class="cm-string">'main'</span>,<span class="cm-string">'enough'</span>,<span class="cm-string">'plain'</span>,<span class="cm-string">'girl'</span>,<span class="cm-string">'usual'</span>,<span class="cm-string">'young'</span>,<span class="cm-string">'ready'</span>,<span class="cm-string">'above'</span>,<span class="cm-string">'ever'</span>,<span class="cm-string">'red'</span>,<span class="cm-string">'list'</span>,<span class="cm-string">'though'</span>,<span class="cm-string">'feel'</span>,<span class="cm-string">'talk'</span>,<span class="cm-string">'bird'</span>,<span class="cm-string">'soon'</span>,<span class="cm-string">'body'</span>,<span class="cm-string">'dog'</span>,<span class="cm-string">'family'</span>,<span class="cm-string">'direct'</span>,<span class="cm-string">'pose'</span>,<span class="cm-string">'leave'</span>,<span class="cm-string">'song'</span>,<span class="cm-string">'measure'</span>,<span class="cm-string">'door'</span>,<span class="cm-string">'product'</span>,<span class="cm-string">'black'</span>,<span class="cm-string">'short'</span>,<span class="cm-string">'numeral'</span>,<span class="cm-string">'class'</span>,<span class="cm-string">'wind'</span>,<span class="cm-string">'question'</span>,<span class="cm-string">'happen'</span>,<span class="cm-string">'complete'</span>,<span class="cm-string">'ship'</span>,<span class="cm-string">'area'</span>,<span class="cm-string">'half'</span>,<span class="cm-string">'rock'</span>,<span class="cm-string">'order'</span>,<span class="cm-string">'fire'</span>,<span class="cm-string">'south'</span>,<span class="cm-string">'problem'</span>,<span class="cm-string">'piece'</span>,<span class="cm-string">'told'</span>,<span class="cm-string">'knew'</span>,<span class="cm-string">'pass'</span>,<span class="cm-string">'since'</span>,<span class="cm-string">'top'</span>,<span class="cm-string">'whole'</span>,<span class="cm-string">'king'</span>,<span class="cm-string">'space'</span>,<span class="cm-string">'heard'</span>,<span class="cm-string">'best'</span>,<span class="cm-string">'hour'</span>,<span class="cm-string">'better'</span>,<span class="cm-string">'true .'</span>,<span class="cm-string">'during'</span>,<span class="cm-string">'hundred'</span>,<span class="cm-string">'five'</span>,<span class="cm-string">'remember'</span>,<span class="cm-string">'step'</span>,<span class="cm-string">'early'</span>,<span class="cm-string">'hold'</span>,<span class="cm-string">'west'</span>,<span class="cm-string">'ground'</span>,<span class="cm-string">'interest'</span>,<span class="cm-string">'reach'</span>,<span class="cm-string">'fast'</span>,<span class="cm-string">'verb'</span>,<span class="cm-string">'sing'</span>,<span class="cm-string">'listen'</span>,<span class="cm-string">'six'</span>,<span class="cm-string">'table'</span>,<span class="cm-string">'travel'</span>,<span class="cm-string">'less'</span>,<span class="cm-string">'morning'</span>,<span class="cm-string">'ten'</span>,<span class="cm-string">'simple'</span>,<span class="cm-string">'several'</span>,<span class="cm-string">'vowel'</span>,<span class="cm-string">'toward'</span>,<span class="cm-string">'war'</span>,<span class="cm-string">'lay'</span>,<span class="cm-string">'against'</span>,<span class="cm-string">'pattern'</span>,<span class="cm-string">'slow'</span>,<span class="cm-string">'center'</span>,<span class="cm-string">'love'</span>,<span class="cm-string">'person'</span>,<span class="cm-string">'money'</span>,<span class="cm-string">'serve'</span>,<span class="cm-string">'appear'</span>,<span class="cm-string">'road'</span>,<span class="cm-string">'map'</span>,<span class="cm-string">'rain'</span>,<span class="cm-string">'rule'</span>,<span class="cm-string">'govern'</span>,<span class="cm-string">'pull'</span>,<span class="cm-string">'cold'</span>,<span class="cm-string">'notice'</span>,<span class="cm-string">'voice'</span>,<span class="cm-string">'unit'</span>,<span class="cm-string">'power'</span>,<span class="cm-string">'town'</span>,<span class="cm-string">'fine'</span>,<span class="cm-string">'certain'</span>,<span class="cm-string">'fly'</span>,<span class="cm-string">'fall'</span>,<span class="cm-string">'lead'</span>,<span class="cm-string">'cry'</span>,<span class="cm-string">'dark'</span>,<span class="cm-string">'machine'</span>,<span class="cm-string">'note'</span>,<span class="cm-string">'wait'</span>,<span class="cm-string">'plan'</span>,<span class="cm-string">'figure'</span>,<span class="cm-string">'star'</span>,<span class="cm-string">'box'</span>,<span class="cm-string">'noun'</span>,<span class="cm-string">'field'</span>,<span class="cm-string">'rest'</span>,<span class="cm-string">'correct'</span>,<span class="cm-string">'able'</span>,<span class="cm-string">'pound'</span>,<span class="cm-string">'done'</span>,<span class="cm-string">'beauty'</span>,<span class="cm-string">'drive'</span>,<span class="cm-string">'stood'</span>,<span class="cm-string">'contain'</span>,<span class="cm-string">'front'</span>,<span class="cm-string">'teach'</span>,<span class="cm-string">'week'</span>,<span class="cm-string">'final'</span>,<span class="cm-string">'gave'</span>,<span class="cm-string">'green'</span>,<span class="cm-string">'oh'</span>,<span class="cm-string">'quick'</span>,<span class="cm-string">'develop'</span>,<span class="cm-string">'ocean'</span>,<span class="cm-string">'warm'</span>,<span class="cm-string">'free'</span>,<span class="cm-string">'minute'</span>,<span class="cm-string">'strong'</span>,<span class="cm-string">'special'</span>,<span class="cm-string">'mind'</span>,<span class="cm-string">'behind'</span>,<span class="cm-string">'clear'</span>,<span class="cm-string">'tail'</span>,<span class="cm-string">'produce'</span>,<span class="cm-string">'fact'</span>,<span class="cm-string">'street'</span>,<span class="cm-string">'inch'</span>,<span class="cm-string">'multiply'</span>,<span class="cm-string">'nothing'</span>,<span class="cm-string">'course'</span>,<span class="cm-string">'stay'</span>,<span class="cm-string">'wheel'</span>,<span class="cm-string">'full'</span>,<span class="cm-string">'force'</span>,<span class="cm-string">'blue'</span>,<span class="cm-string">'object'</span>,<span class="cm-string">'decide'</span>,<span class="cm-string">'surface'</span>,<span class="cm-string">'deep'</span>,<span class="cm-string">'moon'</span>,<span class="cm-string">'island'</span>,<span class="cm-string">'foot'</span>,<span class="cm-string">'system'</span>,<span class="cm-string">'busy'</span>,<span class="cm-string">'test'</span>,<span class="cm-string">'record'</span>,<span class="cm-string">'boat'</span>,<span class="cm-string">'common'</span>,<span class="cm-string">'gold'</span>,<span class="cm-string">'possible'</span>,<span class="cm-string">'plane'</span>,<span class="cm-string">'stead'</span>,<span class="cm-string">'dry'</span>,<span class="cm-string">'wonder'</span>,<span class="cm-string">'laugh'</span>,<span class="cm-string">'thousand'</span>,<span class="cm-string">'ago'</span>,<span class="cm-string">'ran'</span>,<span class="cm-string">'check'</span>,<span class="cm-string">'game'</span>,<span class="cm-string">'shape'</span>,<span class="cm-string">'equate'</span>,<span class="cm-string">'hot'</span>,<span class="cm-string">'miss'</span>,<span class="cm-string">'brought'</span>,<span class="cm-string">'heat'</span>,<span class="cm-string">'snow'</span>,<span class="cm-string">'tire'</span>,<span class="cm-string">'bring'</span>,<span class="cm-string">'yes'</span>,<span class="cm-string">'distant'</span>,<span class="cm-string">'fill'</span>,<span class="cm-string">'east'</span>,<span class="cm-string">'paint'</span>,<span class="cm-string">'language'</span>,<span class="cm-string">'among'</span>,<span class="cm-string">'grand'</span>,<span class="cm-string">'ball'</span>,<span class="cm-string">'yet'</span>,<span class="cm-string">'wave'</span>,<span class="cm-string">'drop'</span>,<span class="cm-string">'heart'</span>,<span class="cm-string">'am'</span>,<span class="cm-string">'present'</span>,<span class="cm-string">'heavy'</span>,<span class="cm-string">'dance'</span>,<span class="cm-string">'engine'</span>,<span class="cm-string">'position'</span>,<span class="cm-string">'arm'</span>,<span class="cm-string">'wide'</span>,<span class="cm-string">'sail'</span>,<span class="cm-string">'material'</span>,<span class="cm-string">'size'</span>,<span class="cm-string">'vary'</span>,<span class="cm-string">'settle'</span>,<span class="cm-string">'speak'</span>,<span class="cm-string">'weight'</span>,<span class="cm-string">'general'</span>,<span class="cm-string">'ice'</span>,<span class="cm-string">'matter'</span>,<span class="cm-string">'circle'</span>,<span class="cm-string">'pair'</span>,<span class="cm-string">'include'</span>,<span class="cm-string">'divide'</span>,<span class="cm-string">'syllable'</span>,<span class="cm-string">'felt'</span>,<span class="cm-string">'perhaps'</span>,<span class="cm-string">'pick'</span>,<span class="cm-string">'sudden'</span>,<span class="cm-string">'count'</span>,<span class="cm-string">'square'</span>,<span class="cm-string">'reason'</span>,<span class="cm-string">'length'</span>,<span class="cm-string">'represent'</span>,<span class="cm-string">'art'</span>,<span class="cm-string">'subject'</span>,<span class="cm-string">'region'</span>,<span class="cm-string">'energy'</span>,<span class="cm-string">'hunt'</span>,<span class="cm-string">'probable'</span>,<span class="cm-string">'bed'</span>,<span class="cm-string">'brother'</span>,<span class="cm-string">'egg'</span>,<span class="cm-string">'ride'</span>,<span class="cm-string">'cell'</span>,<span class="cm-string">'believe'</span>,<span class="cm-string">'fraction'</span>,<span class="cm-string">'forest'</span>,<span class="cm-string">'sit'</span>,<span class="cm-string">'race'</span>,<span class="cm-string">'window'</span>,<span class="cm-string">'store'</span>,<span class="cm-string">'summer'</span>,<span class="cm-string">'train'</span>,<span class="cm-string">'sleep'</span>,<span class="cm-string">'prove'</span>,<span class="cm-string">'lone'</span>,<span class="cm-string">'leg'</span>,<span class="cm-string">'exercise'</span>,<span class="cm-string">'wall'</span>,<span class="cm-string">'catch'</span>,<span class="cm-string">'mount'</span>,<span class="cm-string">'wish'</span>,<span class="cm-string">'sky'</span>,<span class="cm-string">'board'</span>,<span class="cm-string">'joy'</span>,<span class="cm-string">'winter'</span>,<span class="cm-string">'sat'</span>,<span class="cm-string">'written'</span>,<span class="cm-string">'wild'</span>,<span class="cm-string">'instrument'</span>,<span class="cm-string">'kept'</span>,<span class="cm-string">'glass'</span>,<span class="cm-string">'grass'</span>,<span class="cm-string">'cow'</span>,<span class="cm-string">'job'</span>,<span class="cm-string">'edge'</span>,<span class="cm-string">'sign'</span>,<span class="cm-string">'visit'</span>,<span class="cm-string">'past'</span>,<span class="cm-string">'soft'</span>,<span class="cm-string">'fun'</span>,<span class="cm-string">'bright'</span>,<span class="cm-string">'gas'</span>,<span class="cm-string">'weather'</span>,<span class="cm-string">'month'</span>,<span class="cm-string">'million'</span>,<span class="cm-string">'bear'</span>,<span class="cm-string">'finish'</span>,<span class="cm-string">'happy'</span>,<span class="cm-string">'hope'</span>,<span class="cm-string">'flower'</span>,<span class="cm-string">'clothe'</span>,<span class="cm-string">'strange'</span>,<span class="cm-string">'gone'</span>,<span class="cm-string">'jump'</span>,<span class="cm-string">'baby'</span>,<span class="cm-string">'eight'</span>,<span class="cm-string">'village'</span>,<span class="cm-string">'meet'</span>,<span class="cm-string">'root'</span>,<span class="cm-string">'buy'</span>,<span class="cm-string">'raise'</span>,<span class="cm-string">'solve'</span>,<span class="cm-string">'metal'</span>,<span class="cm-string">'whether'</span>,<span class="cm-string">'push'</span>,<span class="cm-string">'seven'</span>,<span class="cm-string">'paragraph'</span>,<span class="cm-string">'third'</span>,<span class="cm-string">'shall'</span>,<span class="cm-string">'held'</span>,<span class="cm-string">'hair'</span>,<span class="cm-string">'describe'</span>,<span class="cm-string">'cook'</span>,<span class="cm-string">'floor'</span>,<span class="cm-string">'either'</span>,<span class="cm-string">'result'</span>,<span class="cm-string">'burn'</span>,<span class="cm-string">'hill'</span>,<span class="cm-string">'safe'</span>,<span class="cm-string">'cat'</span>,<span class="cm-string">'century'</span>,<span class="cm-string">'consider'</span>,<span class="cm-string">'type'</span>,<span class="cm-string">'law'</span>,<span class="cm-string">'bit'</span>,<span class="cm-string">'coast'</span>,<span class="cm-string">'copy'</span>,<span class="cm-string">'phrase'</span>,<span class="cm-string">'silent'</span>,<span class="cm-string">'tall'</span>,<span class="cm-string">'sand'</span>,<span class="cm-string">'soil'</span>,<span class="cm-string">'roll'</span>,<span class="cm-string">'temperature'</span>,<span class="cm-string">'finger'</span>,<span class="cm-string">'industry'</span>,<span class="cm-string">'value'</span>,<span class="cm-string">'fight'</span>,<span class="cm-string">'lie'</span>,<span class="cm-string">'beat'</span>,<span class="cm-string">'excite'</span>,<span class="cm-string">'natural'</span>,<span class="cm-string">'view'</span>,<span class="cm-string">'sense'</span>,<span class="cm-string">'ear'</span>,<span class="cm-string">'else'</span>,<span class="cm-string">'quite'</span>,<span class="cm-string">'broke'</span>,<span class="cm-string">'case'</span>,<span class="cm-string">'middle'</span>,<span class="cm-string">'kill'</span>,<span class="cm-string">'son'</span>,<span class="cm-string">'lake'</span>,<span class="cm-string">'moment'</span>,<span class="cm-string">'scale'</span>,<span class="cm-string">'loud'</span>,<span class="cm-string">'spring'</span>,<span class="cm-string">'observe'</span>,<span class="cm-string">'child'</span>,<span class="cm-string">'straight'</span>,<span class="cm-string">'consonant'</span>,<span class="cm-string">'nation'</span>,<span class="cm-string">'dictionary'</span>,<span class="cm-string">'milk'</span>,<span class="cm-string">'speed'</span>,<span class="cm-string">'method'</span>,<span class="cm-string">'organ'</span>,<span class="cm-string">'pay'</span>,<span class="cm-string">'age'</span>,<span class="cm-string">'section'</span>,<span class="cm-string">'dress'</span>,<span class="cm-string">'cloud'</span>,<span class="cm-string">'surprise'</span>,<span class="cm-string">'quiet'</span>,<span class="cm-string">'stone'</span>,<span class="cm-string">'tiny'</span>,<span class="cm-string">'climb'</span>,<span class="cm-string">'cool'</span>,<span class="cm-string">'design'</span>,<span class="cm-string">'poor'</span>,<span class="cm-string">'lot'</span>,<span class="cm-string">'experiment'</span>,<span class="cm-string">'bottom'</span>,<span class="cm-string">'key'</span>,<span class="cm-string">'iron'</span>,<span class="cm-string">'single'</span>,<span class="cm-string">'stick'</span>,<span class="cm-string">'flat'</span>,<span class="cm-string">'twenty'</span>,<span class="cm-string">'skin'</span>,<span class="cm-string">'smile'</span>,<span class="cm-string">'crease'</span>,<span class="cm-string">'hole'</span>,<span class="cm-string">'trade'</span>,<span class="cm-string">'melody'</span>,<span class="cm-string">'trip'</span>,<span class="cm-string">'office'</span>,<span class="cm-string">'receive'</span>,<span class="cm-string">'row'</span>,<span class="cm-string">'mouth'</span>,<span class="cm-string">'exact'</span>,<span class="cm-string">'symbol'</span>,<span class="cm-string">'die'</span>,<span class="cm-string">'least'</span>,<span class="cm-string">'trouble'</span>,<span class="cm-string">'shout'</span>,<span class="cm-string">'except'</span>,<span class="cm-string">'wrote'</span>,<span class="cm-string">'seed'</span>,<span class="cm-string">'tone'</span>,<span class="cm-string">'join'</span>,<span class="cm-string">'suggest'</span>,<span class="cm-string">'clean'</span>,<span class="cm-string">'break'</span>,<span class="cm-string">'lady'</span>,<span class="cm-string">'yard'</span>,<span class="cm-string">'rise'</span>,<span class="cm-string">'bad'</span>,<span class="cm-string">'blow'</span>,<span class="cm-string">'oil'</span>,<span class="cm-string">'blood'</span>,<span class="cm-string">'touch'</span>,<span class="cm-string">'grew'</span>,<span class="cm-string">'cent'</span>,<span class="cm-string">'mix'</span>,<span class="cm-string">'team'</span>,<span class="cm-string">'wire'</span>,<span class="cm-string">'cost'</span>,<span class="cm-string">'lost'</span>,<span class="cm-string">'brown'</span>,<span class="cm-string">'wear'</span>,<span class="cm-string">'garden'</span>,<span class="cm-string">'equal'</span>,<span class="cm-string">'sent'</span>,<span class="cm-string">'choose'</span>,<span class="cm-string">'fell'</span>,<span class="cm-string">'fit'</span>,<span class="cm-string">'flow'</span>,<span class="cm-string">'fair'</span>,<span class="cm-string">'bank'</span>,<span class="cm-string">'collect'</span>,<span class="cm-string">'save'</span>,<span class="cm-string">'control'</span>,<span class="cm-string">'decimal'</span>,<span class="cm-string">'gentle'</span>,<span class="cm-string">'woman'</span>,<span class="cm-string">'captain'</span>,<span class="cm-string">'practice'</span>,<span class="cm-string">'separate'</span>,<span class="cm-string">'difficult'</span>,<span class="cm-string">'doctor'</span>,<span class="cm-string">'please'</span>,<span class="cm-string">'protect'</span>,<span class="cm-string">'noon'</span>,<span class="cm-string">'whose'</span>,<span class="cm-string">'locate'</span>,<span class="cm-string">'ring'</span>,<span class="cm-string">'character'</span>,<span class="cm-string">'insect'</span>,<span class="cm-string">'caught'</span>,<span class="cm-string">'period'</span>,<span class="cm-string">'indicate'</span>,<span class="cm-string">'radio'</span>,<span class="cm-string">'spoke'</span>,<span class="cm-string">'atom'</span>,<span class="cm-string">'human'</span>,<span class="cm-string">'history'</span>,<span class="cm-string">'effect'</span>,<span class="cm-string">'electric'</span>,<span class="cm-string">'expect'</span>,<span class="cm-string">'crop'</span>,<span class="cm-string">'modern'</span>,<span class="cm-string">'element'</span>,<span class="cm-string">'hit'</span>,<span class="cm-string">'student'</span>,<span class="cm-string">'corner'</span>,<span class="cm-string">'party'</span>,<span class="cm-string">'supply'</span>,<span class="cm-string">'bone'</span>,<span class="cm-string">'rail'</span>,<span class="cm-string">'imagine'</span>,<span class="cm-string">'provide'</span>,<span class="cm-string">'agree'</span>,<span class="cm-string">'thus'</span>,<span class="cm-string">'capital'</span>,<span class="cm-string">'wont'</span>,<span class="cm-string">'chair'</span>,<span class="cm-string">'danger'</span>,<span class="cm-string">'fruit'</span>,<span class="cm-string">'rich'</span>,<span class="cm-string">'thick'</span>,<span class="cm-string">'soldier'</span>,<span class="cm-string">'process'</span>,<span class="cm-string">'operate'</span>,<span class="cm-string">'guess'</span>,<span class="cm-string">'necessary'</span>,<span class="cm-string">'sharp'</span>,<span class="cm-string">'wing'</span>,<span class="cm-string">'create'</span>,<span class="cm-string">'neighbor'</span>,<span class="cm-string">'wash'</span>,<span class="cm-string">'bat'</span>,<span class="cm-string">'rather'</span>,<span class="cm-string">'crowd'</span>,<span class="cm-string">'corn'</span>,<span class="cm-string">'compare'</span>,<span class="cm-string">'poem'</span>,<span class="cm-string">'string'</span>,<span class="cm-string">'bell'</span>,<span class="cm-string">'depend'</span>,<span class="cm-string">'meat'</span>,<span class="cm-string">'rub'</span>,<span class="cm-string">'tube'</span>,<span class="cm-string">'famous'</span>,<span class="cm-string">'dollar'</span>,<span class="cm-string">'stream'</span>,<span class="cm-string">'fear'</span>,<span class="cm-string">'sight'</span>,<span class="cm-string">'thin'</span>,<span class="cm-string">'triangle'</span>,<span class="cm-string">'planet'</span>,<span class="cm-string">'hurry'</span>,<span class="cm-string">'chief'</span>,<span class="cm-string">'colony'</span>,<span class="cm-string">'clock'</span>,<span class="cm-string">'mine'</span>,<span class="cm-string">'tie'</span>,<span class="cm-string">'enter'</span>,<span class="cm-string">'major'</span>,<span class="cm-string">'fresh'</span>,<span class="cm-string">'search'</span>,<span class="cm-string">'send'</span>,<span class="cm-string">'yellow'</span>,<span class="cm-string">'gun'</span>,<span class="cm-string">'allow'</span>,<span class="cm-string">'print'</span>,<span class="cm-string">'dead'</span>,<span class="cm-string">'spot'</span>,<span class="cm-string">'desert'</span>,<span class="cm-string">'suit'</span>,<span class="cm-string">'current'</span>,<span class="cm-string">'lift'</span>,<span class="cm-string">'rose'</span>,<span class="cm-string">'continue'</span>,<span class="cm-string">'block'</span>,<span class="cm-string">'chart'</span>,<span class="cm-string">'hat'</span>,<span class="cm-string">'sell'</span>,<span class="cm-string">'success'</span>,<span class="cm-string">'company'</span>,<span class="cm-string">'subtract'</span>,<span class="cm-string">'event'</span>,<span class="cm-string">'particular'</span>,<span class="cm-string">'deal'</span>,<span class="cm-string">'swim'</span>,<span class="cm-string">'term'</span>,<span class="cm-string">'opposite'</span>,<span class="cm-string">'wife'</span>,<span class="cm-string">'shoe'</span>,<span class="cm-string">'shoulder'</span>,<span class="cm-string">'spread'</span>,<span class="cm-string">'arrange'</span>,<span class="cm-string">'camp'</span>,<span class="cm-string">'invent'</span>,<span class="cm-string">'cotton'</span>,<span class="cm-string">'born'</span>,<span class="cm-string">'determine'</span>,<span class="cm-string">'quart'</span>,<span class="cm-string">'nine'</span>,<span class="cm-string">'truck'</span>,<span class="cm-string">'noise'</span>,<span class="cm-string">'level'</span>,<span class="cm-string">'chance'</span>,<span class="cm-string">'gather'</span>,<span class="cm-string">'shop'</span>,<span class="cm-string">'stretch'</span>,<span class="cm-string">'throw'</span>,<span class="cm-string">'shine'</span>,<span class="cm-string">'property'</span>,<span class="cm-string">'column'</span>,<span class="cm-string">'molecule'</span>,<span class="cm-string">'select'</span>,<span class="cm-string">'wrong'</span>,<span class="cm-string">'gray'</span>,<span class="cm-string">'repeat'</span>,<span class="cm-string">'require'</span>,<span class="cm-string">'broad'</span>,<span class="cm-string">'prepare'</span>,<span class="cm-string">'salt'</span>,<span class="cm-string">'nose'</span>,<span class="cm-string">'plural'</span>,<span class="cm-string">'anger'</span>,<span class="cm-string">'claim'</span>,<span class="cm-string">'continent'</span>,<span class="cm-string">'oxygen'</span>,<span class="cm-string">'sugar'</span>,<span class="cm-string">'death'</span>,<span class="cm-string">'pretty'</span>,<span class="cm-string">'skill'</span>,<span class="cm-string">'women'</span>,<span class="cm-string">'season'</span>,<span class="cm-string">'solution'</span>,<span class="cm-string">'magnet'</span>,<span class="cm-string">'silver'</span>,<span class="cm-string">'thank'</span>,<span class="cm-string">'branch'</span>,<span class="cm-string">'match'</span>,<span class="cm-string">'suffix'</span>,<span class="cm-string">'especially'</span>,<span class="cm-string">'fig'</span>,<span class="cm-string">'afraid'</span>,<span class="cm-string">'huge'</span>,<span class="cm-string">'sister'</span>,<span class="cm-string">'steel'</span>,<span class="cm-string">'discuss'</span>,<span class="cm-string">'forward'</span>,<span class="cm-string">'similar'</span>,<span class="cm-string">'guide'</span>,<span class="cm-string">'experience'</span>,<span class="cm-string">'score'</span>,<span class="cm-string">'apple'</span>,<span class="cm-string">'bought'</span>,<span class="cm-string">'led'</span>,<span class="cm-string">'pitch'</span>,<span class="cm-string">'coat'</span>,<span class="cm-string">'mass'</span>,<span class="cm-string">'card'</span>,<span class="cm-string">'band'</span>,<span class="cm-string">'rope'</span>,<span class="cm-string">'slip'</span>,<span class="cm-string">'win'</span>,<span class="cm-string">'dream'</span>,<span class="cm-string">'evening'</span>,<span class="cm-string">'condition'</span>,<span class="cm-string">'feed'</span>,<span class="cm-string">'tool'</span>,<span class="cm-string">'total'</span>,<span class="cm-string">'basic'</span>,<span class="cm-string">'smell'</span>,<span class="cm-string">'valley'</span>,<span class="cm-string">'nor'</span>,<span class="cm-string">'double'</span>,<span class="cm-string">'seat'</span>,<span class="cm-string">'arrive'</span>,<span class="cm-string">'master'</span>,<span class="cm-string">'track'</span>,<span class="cm-string">'parent'</span>,<span class="cm-string">'shore'</span>,<span class="cm-string">'division'</span>,<span class="cm-string">'sheet'</span>,<span class="cm-string">'substance'</span>,<span class="cm-string">'favor'</span>,<span class="cm-string">'connect'</span>,<span class="cm-string">'post'</span>,<span class="cm-string">'spend'</span>,<span class="cm-string">'chord'</span>,<span class="cm-string">'fat'</span>,<span class="cm-string">'glad'</span>,<span class="cm-string">'original'</span>,<span class="cm-string">'share'</span>,<span class="cm-string">'station'</span>,<span class="cm-string">'dad'</span>,<span class="cm-string">'bread'</span>,<span class="cm-string">'charge'</span>,<span class="cm-string">'proper'</span>,<span class="cm-string">'bar'</span>,<span class="cm-string">'offer'</span>,<span class="cm-string">'segment'</span>,<span class="cm-string">'slave'</span>,<span class="cm-string">'duck'</span>,<span class="cm-string">'instant'</span>,<span class="cm-string">'market'</span>,<span class="cm-string">'degree'</span>,<span class="cm-string">'populate'</span>,<span class="cm-string">'chick'</span>,<span class="cm-string">'dear'</span>,<span class="cm-string">'enemy'</span>,<span class="cm-string">'reply'</span>,<span class="cm-string">'drink'</span>,<span class="cm-string">'occur'</span>,<span class="cm-string">'support'</span>,<span class="cm-string">'speech'</span>,<span class="cm-string">'nature'</span>,<span class="cm-string">'range'</span>,<span class="cm-string">'steam'</span>,<span class="cm-string">'motion'</span>,<span class="cm-string">'path'</span>,<span class="cm-string">'liquid'</span>,<span class="cm-string">'log'</span>,<span class="cm-string">'meant'</span>,<span class="cm-string">'quotient'</span>,<span class="cm-string">'teeth'</span>,<span class="cm-string">'shell'</span>,<span class="cm-string">'neck'</span>];<span class="cm-comment">//from https://gist.github.com/deekayen/4148741\</span><br></code>
</pre></div>
<p>An array of the top 1000 most used English words.</p>
<h3><a class="article-headline-link" href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker#scoring-function-3" id="scoring-function-3">#</a>Scoring Function</h3>
<div class="box"><pre class="has-code">  <code class="sh cm-s-default"><span class="cm-keyword">function</span> <span class="cm-def">score</span>(<span class="cm-def">str</span>, <span class="cm-def">keyArr</span>) {<br>    <span class="cm-keyword">var</span> <span class="cm-def">winnerIndex</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>;<br>    <span class="cm-keyword">var</span> <span class="cm-def">winnerScore</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>;<br>    <span class="cm-variable-2">str</span> <span class="cm-operator">=</span> <span class="cm-variable-2">str</span>.<span class="cm-property">toLowerCase</span>();<br>    <span class="cm-keyword">for</span> (<span class="cm-keyword">var</span> <span class="cm-def">k</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>; <span class="cm-variable-2">k</span> <span class="cm-operator">&lt;</span> <span class="cm-variable-2">keyArr</span>.<span class="cm-property">length</span>; <span class="cm-variable-2">k</span><span class="cm-operator">++</span>) {<br>        <span class="cm-keyword">var</span> <span class="cm-def">ds</span> <span class="cm-operator">=</span> <span class="cm-variable">deSubstitute</span>(<span class="cm-variable-2">str</span>,<span class="cm-variable-2">keyArr</span>[<span class="cm-variable-2">k</span>]);<br>        <span class="cm-keyword">var</span> <span class="cm-def">score</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>;<br>        <span class="cm-keyword">for</span> (<span class="cm-keyword">var</span> <span class="cm-def">i</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>, <span class="cm-def">len</span> <span class="cm-operator">=</span> <span class="cm-variable">mostCommon</span>.<span class="cm-property">length</span>; <span class="cm-variable-2">i</span> <span class="cm-operator">&lt;</span> <span class="cm-variable-2">len</span>; <span class="cm-variable-2">i</span><span class="cm-operator">++</span>) {<br>            <span class="cm-keyword">if</span> (<span class="cm-variable-2">ds</span>.<span class="cm-property">indexOf</span>(<span class="cm-string">' '</span><span class="cm-operator">+</span><span class="cm-variable">mostCommon</span>[<span class="cm-variable-2">i</span>].<span class="cm-property">toLowerCase</span>()<span class="cm-operator">+</span><span class="cm-string">' '</span>) <span class="cm-operator">&gt;</span> <span class="cm-operator">-</span><span class="cm-number">1</span>) {<br>                <span class="cm-variable-2">score</span><span class="cm-operator">++</span>;<br>            }<br>        }<br>        <span class="cm-keyword">if</span> (<span class="cm-variable-2">score</span> <span class="cm-operator">&gt;</span> <span class="cm-variable-2">winnerScore</span>) {<br>            <span class="cm-variable-2">winnerScore</span> <span class="cm-operator">=</span> <span class="cm-variable-2">score</span>;<br>            <span class="cm-variable-2">winnerIndex</span> <span class="cm-operator">=</span> <span class="cm-variable-2">k</span>;<br>        }<br>    }<br>    <span class="cm-keyword">return</span> [<span class="cm-variable-2">keyArr</span>[<span class="cm-variable-2">winnerIndex</span>], <span class="cm-variable-2">winnerScore</span>];<br>}   <br></code>
</pre></div>
<p>This function takes in the string you're trying to crack, and an array of possible keys, each needing scoring. It returns the best fit candidate (most real English words matched) and it's score.</p>
<h3><a class="article-headline-link" href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker#mutator-function-4" id="mutator-function-4">#</a>Mutator Function</h3>
<div class="box"><pre class="has-code">  <code class="sh cm-s-default"><span class="cm-keyword">function</span> <span class="cm-def">mutate</span>(<span class="cm-def">arr</span>,<span class="cm-def">amount</span>) {<br>    <span class="cm-keyword">var</span> <span class="cm-def">newCopy</span> <span class="cm-operator">=</span> <span class="cm-variable-2">arr</span>.<span class="cm-property">slice</span>(<span class="cm-number">0</span>);<br>    <span class="cm-keyword">for</span> (<span class="cm-keyword">var</span> <span class="cm-def">i</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>; <span class="cm-variable-2">i</span> <span class="cm-operator">&lt;</span> <span class="cm-variable-2">amount</span>; <span class="cm-variable-2">i</span><span class="cm-operator">++</span>) {      <br>        <span class="cm-keyword">var</span> <span class="cm-def">pos1</span><span class="cm-operator">=</span><span class="cm-variable">Math</span>.<span class="cm-property">floor</span>(<span class="cm-variable">Math</span>.<span class="cm-property">random</span>() <span class="cm-operator">*</span> <span class="cm-variable-2">newCopy</span>.<span class="cm-property">length</span>),<br>            <span class="cm-def">pos2</span><span class="cm-operator">=</span><span class="cm-variable">Math</span>.<span class="cm-property">floor</span>(<span class="cm-variable">Math</span>.<span class="cm-property">random</span>() <span class="cm-operator">*</span> <span class="cm-variable-2">newCopy</span>.<span class="cm-property">length</span>),<br>            <span class="cm-def">temp</span><span class="cm-operator">=</span><span class="cm-variable-2">newCopy</span>[<span class="cm-variable-2">pos2</span>];<br>        <span class="cm-variable-2">newCopy</span>[<span class="cm-variable-2">pos2</span>]<span class="cm-operator">=</span><span class="cm-variable-2">newCopy</span>[<span class="cm-variable-2">pos1</span>];<br>        <span class="cm-variable-2">newCopy</span>[<span class="cm-variable-2">pos1</span>]<span class="cm-operator">=</span><span class="cm-variable-2">temp</span>;<br>    }<br>    <span class="cm-keyword">return</span> <span class="cm-variable-2">newCopy</span>;<br>}   <br></code>
</pre></div>
<p>This duplicates the passed in array (to avoid editing the original by reference) and swaps 2 random array values <em>amount</em> times. This gives us control to mutate the alphabet as drasticly as we wish, if we're barking up the wrong figurative tree we can start trying more extreme variants.</p>
<h3><a class="article-headline-link" href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker#starting-point-functions-5" id="starting-point-functions-5">#</a>Starting Point Functions</h3>
<div class="box"><pre class="has-code">  <code class="sh cm-s-default"><span class="cm-keyword">function</span> <span class="cm-def">getMatchIndexes</span>(<span class="cm-def">str</span>, <span class="cm-def">toMatch</span>) {<br>    <span class="cm-keyword">var</span> <span class="cm-def">toMatchLength</span> <span class="cm-operator">=</span> <span class="cm-variable-2">toMatch</span>.<span class="cm-property">length</span>,<br>        <span class="cm-def">indexMatches</span> <span class="cm-operator">=</span> [], <span class="cm-def">match</span>,<br>        <span class="cm-def">i</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>;<br>    <span class="cm-keyword">while</span> ((<span class="cm-variable-2">match</span> <span class="cm-operator">=</span> <span class="cm-variable-2">str</span>.<span class="cm-property">indexOf</span>(<span class="cm-variable-2">toMatch</span>, <span class="cm-variable-2">i</span>)) <span class="cm-operator">&gt;</span> <span class="cm-operator">-</span><span class="cm-number">1</span>) {<br>        <span class="cm-variable-2">indexMatches</span>.<span class="cm-property">push</span>(<span class="cm-variable-2">match</span>);<br>        <span class="cm-variable-2">i</span> <span class="cm-operator">=</span> <span class="cm-variable-2">match</span> <span class="cm-operator">+</span> <span class="cm-variable-2">toMatchLength</span>;<br>    }<br>    <span class="cm-keyword">return</span> <span class="cm-variable-2">indexMatches</span>;<br>}<br><span class="cm-keyword">function</span> <span class="cm-def">orderFrequency</span>(<span class="cm-def">str</span>){<br>    <span class="cm-keyword">var</span> <span class="cm-def">countObj</span> <span class="cm-operator">=</span> [];<br>    <span class="cm-variable-2">str</span> <span class="cm-operator">=</span> <span class="cm-variable-2">str</span>.<span class="cm-property">toLowerCase</span>();<br>    <span class="cm-keyword">var</span> <span class="cm-def">baseCharFreq</span> <span class="cm-operator">=</span> [{<span class="cm-property">freq</span>:<span class="cm-number">0.08</span>,<span class="cm-property">letter</span>:<span class="cm-string">'a'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.015</span>,<span class="cm-property">letter</span>:<span class="cm-string">'b'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.025</span>,<span class="cm-property">letter</span>:<span class="cm-string">'c'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.044</span>,<span class="cm-property">letter</span>:<span class="cm-string">'d'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.126</span>,<span class="cm-property">letter</span>:<span class="cm-string">'e'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.024</span>,<span class="cm-property">letter</span>:<span class="cm-string">'f'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.02</span>,<span class="cm-property">letter</span>:<span class="cm-string">'g'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.063</span>,<span class="cm-property">letter</span>:<span class="cm-string">'h'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.07</span>,<span class="cm-property">letter</span>:<span class="cm-string">'i'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.0014</span>,<span class="cm-property">letter</span>:<span class="cm-string">'j'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.0074</span>,<span class="cm-property">letter</span>:<span class="cm-string">'k'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.04</span>,<span class="cm-property">letter</span>:<span class="cm-string">'l'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.025</span>,<span class="cm-property">letter</span>:<span class="cm-string">'m'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.07</span>,<span class="cm-property">letter</span>:<span class="cm-string">'n'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.076</span>,<span class="cm-property">letter</span>:<span class="cm-string">'o'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.018</span>,<span class="cm-property">letter</span>:<span class="cm-string">'p'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.001</span>,<span class="cm-property">letter</span>:<span class="cm-string">'q'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.06</span>,<span class="cm-property">letter</span>:<span class="cm-string">'r'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.063</span>,<span class="cm-property">letter</span>:<span class="cm-string">'s'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.08</span>,<span class="cm-property">letter</span>:<span class="cm-string">'t'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.028</span>,<span class="cm-property">letter</span>:<span class="cm-string">'u'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.009</span>,<span class="cm-property">letter</span>:<span class="cm-string">'v'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.02</span>,<span class="cm-property">letter</span>:<span class="cm-string">'w'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.0017</span>,<span class="cm-property">letter</span>:<span class="cm-string">'x'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.02</span>,<span class="cm-property">letter</span>:<span class="cm-string">'y'</span>},{<span class="cm-property">freq</span>:<span class="cm-number">0.0008</span>,<span class="cm-property">letter</span>:<span class="cm-string">'z'</span>}];<br>    <span class="cm-keyword">for</span> (<span class="cm-keyword">var</span> <span class="cm-def">i</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>; <span class="cm-variable-2">i</span> <span class="cm-operator">&lt;</span> <span class="cm-number">26</span>; <span class="cm-variable-2">i</span><span class="cm-operator">++</span>) {<br>        <span class="cm-variable-2">countObj</span>.<span class="cm-property">push</span>({<br>            <span class="cm-property">letter</span>:<span class="cm-variable">String</span>.<span class="cm-property">fromCharCode</span>(<span class="cm-variable-2">i</span><span class="cm-operator">+</span><span class="cm-number">97</span>),<br>            <span class="cm-property">count</span>:<span class="cm-variable">getMatchIndexes</span>(<span class="cm-variable-2">str</span>,<span class="cm-variable">String</span>.<span class="cm-property">fromCharCode</span>(<span class="cm-variable-2">i</span><span class="cm-operator">+</span><span class="cm-number">97</span>)).<span class="cm-property">length</span>,<br>            <span class="cm-property">guessLetter</span>:<span class="cm-number">0</span>,<br>            <span class="cm-property">origOrder</span>:<span class="cm-variable-2">i</span><br>        });<br>    }<br>    <span class="cm-variable-2">baseCharFreq</span>.<span class="cm-property">sort</span>(<span class="cm-keyword">function</span>(<span class="cm-def">a</span>, <span class="cm-def">b</span>){<br>        <span class="cm-keyword">if</span>(<span class="cm-variable-2">a</span>.<span class="cm-property">freq</span> <span class="cm-operator">&lt;</span> <span class="cm-variable-2">b</span>.<span class="cm-property">freq</span>) <span class="cm-keyword">return</span> <span class="cm-number">1</span>;<br>        <span class="cm-keyword">if</span>(<span class="cm-variable-2">a</span>.<span class="cm-property">freq</span> <span class="cm-operator">&gt;</span> <span class="cm-variable-2">b</span>.<span class="cm-property">freq</span>) <span class="cm-keyword">return</span> <span class="cm-operator">-</span><span class="cm-number">1</span>;<br>        <span class="cm-keyword">return</span> <span class="cm-number">0</span>;<br>    });<br>    <span class="cm-variable-2">countObj</span>.<span class="cm-property">sort</span>(<span class="cm-keyword">function</span>(<span class="cm-def">a</span>, <span class="cm-def">b</span>){<br>        <span class="cm-keyword">if</span>(<span class="cm-variable-2">a</span>.<span class="cm-property">count</span> <span class="cm-operator">&lt;</span> <span class="cm-variable-2">b</span>.<span class="cm-property">count</span>) <span class="cm-keyword">return</span> <span class="cm-number">1</span>;<br>        <span class="cm-keyword">if</span>(<span class="cm-variable-2">a</span>.<span class="cm-property">count</span> <span class="cm-operator">&gt;</span> <span class="cm-variable-2">b</span>.<span class="cm-property">count</span>) <span class="cm-keyword">return</span> <span class="cm-operator">-</span><span class="cm-number">1</span>;<br>        <span class="cm-keyword">return</span> <span class="cm-number">0</span>;<br>    });<br>    <span class="cm-keyword">for</span> (<span class="cm-keyword">var</span> <span class="cm-def">j</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>; <span class="cm-variable-2">j</span> <span class="cm-operator">&lt;</span> <span class="cm-variable-2">countObj</span>.<span class="cm-property">length</span>; <span class="cm-variable-2">j</span><span class="cm-operator">++</span>) {<br>        <span class="cm-variable-2">countObj</span>[<span class="cm-variable-2">j</span>].<span class="cm-property">guessLetter</span> <span class="cm-operator">=</span> <span class="cm-variable-2">baseCharFreq</span>[<span class="cm-variable-2">j</span>].<span class="cm-property">letter</span>;<br>    }<br>    <span class="cm-variable-2">countObj</span>.<span class="cm-property">sort</span>(<span class="cm-keyword">function</span>(<span class="cm-def">a</span>, <span class="cm-def">b</span>){<br>        <span class="cm-keyword">if</span>(<span class="cm-variable-2">a</span>.<span class="cm-property">guessLetter</span> <span class="cm-operator">&gt;</span> <span class="cm-variable-2">b</span>.<span class="cm-property">guessLetter</span>) <span class="cm-keyword">return</span> <span class="cm-number">1</span>;<br>        <span class="cm-keyword">if</span>(<span class="cm-variable-2">a</span>.<span class="cm-property">guessLetter</span> <span class="cm-operator">&lt;</span> <span class="cm-variable-2">b</span>.<span class="cm-property">guessLetter</span>) <span class="cm-keyword">return</span> <span class="cm-operator">-</span><span class="cm-number">1</span>;<br>        <span class="cm-keyword">return</span> <span class="cm-number">0</span>;<br>    });<br>    <span class="cm-keyword">var</span> <span class="cm-def">guessKey</span> <span class="cm-operator">=</span> [];<br>    <span class="cm-keyword">for</span> (<span class="cm-keyword">var</span> <span class="cm-def">i</span> <span class="cm-operator">=</span> <span class="cm-number">0</span>; <span class="cm-variable-2">i</span> <span class="cm-operator">&lt;</span> <span class="cm-variable-2">countObj</span>.<span class="cm-property">length</span>; <span class="cm-variable-2">i</span><span class="cm-operator">++</span>) {<br>        <span class="cm-variable-2">guessKey</span>.<span class="cm-property">push</span>(<span class="cm-variable-2">countObj</span>[<span class="cm-variable-2">i</span>].<span class="cm-property">letter</span>);<br>    }<br>    <span class="cm-keyword">return</span> <span class="cm-variable-2">guessKey</span>;<br>}<br></code>
</pre></div>
<p>Technically this piece isn't needed, but it makes the process much more efficient. Rather than starting with random keys, we use the known average character frequency to give ourselves a nice starting place to begin mutating. This function essentially creates a key that would be correct if the character frequency of the string to crack exactly matched up with English as a whole.</p>
<h3><a class="article-headline-link" href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker#controller-6" id="controller-6">#</a>Controller</h3>
<div class="box"><pre class="has-code">  <code class="sh cm-s-default"><span class="cm-keyword">function</span> <span class="cm-def">crackSubstitution</span> (<span class="cm-def">str</span>, <span class="cm-def">attempts</span>) {<br>    <span class="cm-keyword">var</span> <span class="cm-def">runningKeys</span> <span class="cm-operator">=</span> [],<br>        <span class="cm-def">runningWinner</span>,<br>        <span class="cm-def">runningWinnerScore</span>; <br>    <span class="cm-variable-2">runningKeys</span>.<span class="cm-property">push</span>(<span class="cm-variable">orderFrequency</span>(<span class="cm-variable-2">str</span>));<br>    <span class="cm-keyword">var</span> <span class="cm-def">scoreVar</span> <span class="cm-operator">=</span> <span class="cm-variable">score</span>(<span class="cm-variable-2">str</span>,<span class="cm-variable-2">runningKeys</span>);<br>    <span class="cm-variable-2">runningWinner</span> <span class="cm-operator">=</span> <span class="cm-variable-2">scoreVar</span>[<span class="cm-number">0</span>];<br>    <span class="cm-variable-2">runningWinnerScore</span> <span class="cm-operator">=</span> <span class="cm-variable-2">scoreVar</span>[<span class="cm-number">1</span>];<br>    <span class="cm-variable-2">runningKeys</span> <span class="cm-operator">=</span> [<span class="cm-variable-2">runningWinner</span>];<br>    <span class="cm-keyword">for</span> (<span class="cm-keyword">var</span> <span class="cm-def">attempt</span> <span class="cm-operator">=</span> <span class="cm-number">1</span>; <span class="cm-variable-2">attempt</span> <span class="cm-operator">&lt;</span> <span class="cm-variable-2">attempts</span>; <span class="cm-variable-2">attempt</span><span class="cm-operator">++</span>) {<br>        <span class="cm-keyword">while</span>(<span class="cm-variable-2">runningKeys</span>.<span class="cm-property">length</span> <span class="cm-operator">&lt;</span> <span class="cm-number">20</span>) {<br>            <span class="cm-variable-2">runningKeys</span>.<span class="cm-property">push</span>(<span class="cm-variable">mutate</span>(<span class="cm-variable-2">runningWinner</span>,<span class="cm-variable-2">runningKeys</span>.<span class="cm-property">length</span>));<br>        } <br>        <span class="cm-variable-2">scoreVar</span> <span class="cm-operator">=</span> <span class="cm-variable">score</span>(<span class="cm-variable-2">str</span>,<span class="cm-variable-2">runningKeys</span>);<br>        <span class="cm-keyword">if</span> (<span class="cm-variable-2">scoreVar</span>[<span class="cm-number">1</span>] <span class="cm-operator">&gt;</span> <span class="cm-variable-2">runningWinnerScore</span>) {<br>            <span class="cm-variable-2">runningWinner</span> <span class="cm-operator">=</span> <span class="cm-variable-2">scoreVar</span>[<span class="cm-number">0</span>];<br>            <span class="cm-variable-2">runningWinnerScore</span> <span class="cm-operator">=</span> <span class="cm-variable-2">scoreVar</span>[<span class="cm-number">1</span>];<br>        }<br>        <span class="cm-variable-2">runningKeys</span> <span class="cm-operator">=</span> [<span class="cm-variable-2">runningWinner</span>];<br>        <span class="cm-keyword">if</span> (<span class="cm-variable-2">attempt</span><span class="cm-operator">%</span><span class="cm-number">100</span><span class="cm-operator">===</span><span class="cm-number">0</span>) <span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-string">'attempt: '</span><span class="cm-operator">+</span><span class="cm-variable-2">attempt</span>);<br>    }<br>    <span class="cm-keyword">return</span> <span class="cm-variable-2">runningWinner</span>;<br>}   <br></code>
</pre></div>
<p>The controller makes use of the rest of the pieces we just defined, you pass in the string you want to crack and the number of 'turns' you want to allow the program to run. First it defines some variables and starts the mutation process with the perfect character frequency version from the starting point function. It then runs a loop <em>attempts</em> times and continuously mutates the best key it's found. Over hundreds or thousands of repetitions, this slowly can actually find the correct key for a cipher, and in the scope of things much quicker than searching 400 septillion variations!</p>
<h3><a class="article-headline-link" href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker#go-time-7" id="go-time-7">#</a>Go time!</h3>
<div class="box"><pre class="has-code">  <code class="sh cm-s-default"><br><span class="cm-keyword">var</span> <span class="cm-def">crack</span> <span class="cm-operator">=</span> <span class="cm-string">'BT JPX RMLX PCUV AMLX ICVJP IBTWXVR CI M LMT’R PMTN, MTN YVCJX CDXV MWMBTRJ JPX AMTNGXRJBAH UQCT JPX QGMRJXV CI JPX YMGG CI JPX HBTW’R QMGMAX; MTN JPX HBTW RMY JPX QMVJ CI JPX PMTN JPMJ YVCJX. JPXT JPX HBTW’R ACUTJXTMTAX YMR APMTWXN, MTN PBR JPCUWPJR JVCUFGXN PBL, RC JPMJ JPX SCBTJR CI PBR GCBTR YXVX GCCRXN, MTN PBR HTXXR RLCJX CTX MWMBTRJ MTCJPXV. JPX HBTW AVBXN MGCUN JC FVBTW BT JPX MRJVCGCWXVR, JPX APMGNXMTR, MTN JPX RCCJPRMEXVR. MTN JPX HBTW RQMHX, MTN RMBN JC JPX YBRX LXT CI FMFEGCT, YPCRCXDXV RPMGG VXMN JPBR YVBJBTW, MTN RPCY LX JPX BTJXVQVXJMJBCT JPXVXCI, RPMGG FX AGCJPXN YBJP RAM'</span>;<br><br><br><span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-variable">deSubstitute</span>(<span class="cm-variable">crack</span>,<span class="cm-variable">crackSubstitution</span>(<span class="cm-variable">crack</span>, <span class="cm-number">2000</span>)));<br></code>
</pre></div>
<p>Here's how you can run all that code! I suggest running it with Node, but it will run in the browser (if slowly). </p>
<p>View the full code here: <a href="https://github.com/caleboleary/Javascript_Hillclimb_Substitution_Cipher_Breaker">https://github.com/caleboleary/Javascript_Hillclimb_Substitution_Cipher_Breaker</a></p>
</section>
<hr class="end-of-article-sep">
<footer class="end-of-article-footer">
<div class="post-meta-line post-meta-line-hearter">
<a href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker#0" id="loves_ZeVEJn" data-item="post" data-hashid="ZeVEJn" class="button button-medium hearter big-hearter heart-button loves loved-1">
<svg class="icon-heart">
<use xlink:href="/svg_sprite?v=8885a907#heart"></use>
</svg>
<svg class="icon-heart icon-animator">
<use xlink:href="/svg_sprite?v=8885a907#heart"></use>
</svg>
</a>
</div>
</footer>
</div>
</div>
</div>
<div id="react-post-details" class="post-details-container"><div class="width-wrapper"><div class="ItemDetails_content-UTGYj PostDetails_content-3XvjI"><aside class="ItemDetails_meta-1k2RC"><div class="ItemDetails_share-2-tXy ItemDetailsShare_root-Gptjf"><span>Share</span><div class="ItemDetailsShare_shareButtonsContainer-1QyCk"><a href="https://twitter.com/intent/tweet?text=JavaScript%20Hillclimbing%20Substitution%20Cipher%20Breaker&amp;url=https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker&amp;via=CodePen" class="button button-medium" title="Share on Twitter" target="_blank" rel="noopener noreferrer"><svg width="20" height="20" class=" icon icon-twitter"><use xlink:href="/svg_sprite?v=8885a907#twitter"></use></svg></a><a href="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker" class="button button-medium" style="white-space: nowrap;"><svg width="20" height="20" class=" icon icon-link-intact"><use xlink:href="/svg_sprite?v=8885a907#link-intact"></use></svg> Copy Link</a></div></div><dl class="ItemDetailsMetaData_root-24Ajc"><div class="ItemDetailsMetaData_meta-3n3NY"><dt>Created on</dt><dd>June 3, 2016</dd></div><div class="ItemDetailsMetaData_meta-3n3NY"><dt>Updated on</dt><dd>June 4, 2016</dd></div></dl><div><div class="ItemDetailsStats_stat-1jADc"><h3 class="ItemDetailsStats_statTitle-3kKiJ"><svg width="20" height="20" class=" icon icon-heart"><use xlink:href="/svg_sprite?v=8885a907#heart"></use></svg> <span class="ItemDetailsStats_count-1R_jz">1</span> Love</h3><div class="ItemDetailsStats_statData-d_w7_"><a class="ItemStatAvatar_root-1XWp_" href="https://codepen.io/petixiuxx"><img src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/a5e27fb218b1c4e709da8784e6911fee" alt=""><div class="ItemStatAvatar_hoverContent-14NC-"><div class="ItemStatAvatar_hoverContentWrap-6neXt">kaitou <svg width="20" height="20" class=" icon icon-arrow-circle-right"><use xlink:href="/svg_sprite?v=8885a907#arrow-circle-right"></use></svg></div></div></a></div></div><div class="ItemDetailsStats_stat-1jADc"><h3 class="ItemDetailsStats_statTitle-3kKiJ"><svg width="20" height="20" class=" icon icon-eye"><use xlink:href="/svg_sprite?v=8885a907#eye"></use></svg> <span class="ItemDetailsStats_count-1R_jz">757</span> Views</h3></div></div></aside><div class=""><form action="https://codepen.io/caleboleary/post/javascript-hillclimbing-substitution-cipher-breaker" class="TextForm_textForm-1CvuX"><label class="screen-reader-text" for="input_1575302144300">Comment</label><textarea id="input_1575302144300" class="TextForm_textInput-2LDdI" placeholder="Want to know how Caleb did this? Ask a question! 
Feeling inspired? Let Caleb know! 
Want to share how you used this Pen? 
Give the creator a confidence boost!" style="height: 100px;"></textarea><div><button type="submit" class="button action-button button-small TextForm_submitButton-2foT5 expand-right"><span class="label">Comment</span><span class="spinner"></span></button></div></form><a class="Comments_markdownButton-1l42y" href="https://commonmark.org/help/" target="_blank" rel="noopener noreferrer">Comments can use Markdown</a><p class="Comments_noComments-2NPfu"><strong>No Comments</strong><br>You can be the first!</p></div></div></div></div></article>
</main>
<div id="react-site-footer"><div class="SiteFooterStyles_promoFooter-3O-ml" id="promo-footer"><div class="width-wrapper SiteFooterStyles_footerGrid-3Up89" id="promo-footer-width-wrapper"><div class="footer-chunk footer-chunk-pro" id="footer-chunk-pro"><h3>CodePen PRO</h3><p>Unlock the full power of CodePen by upgrading to <a href="https://codepen.io/pro/"><span class="badge badge-pro">PRO</span></a>. You'll be able to save Private Pens, upload Assets, work with others in real-time with Collab Mode, <a href="https://codepen.io/pro/">and more!</a></p><p><a href="https://codepen.io/accounts/signup" class="button button-medium button-fullwidth">Go PRO!</a></p></div><div class="footer-chunk footer-chunk-jobs text" id="footer-chunk-jobs"><h3>Jobs</h3><p>Here's a few listings from our <a href="https://codepen.io/jobs/">Job Board</a>:</p><a class="SiteFooterStyles_job-3vQN2" href="https://bigcommerce.wearegoose.co.nz/hiring">Front End Developer (REMOTE New Zealand) at Goose</a><a class="SiteFooterStyles_job-3vQN2" href="https://hire.withgoogle.com/public/jobs/gentissolutionscom/view/P_AAAAAACAAKdMRqO6TQ-7h0">Senior Front End Developer - MERN stack at Gentis Solutions</a><a class="SiteFooterStyles_job-3vQN2" href="https://docs.google.com/document/d/1hEszPivLGegnsJfg_Ngz2x9-jzmRx10qmuKrxTHJaUo/edit?usp=sharing">Full Stack Developer at QUINN</a><p><a href="https://codepen.io/job/new/" class="button button-medium button-fullwidth">Post a Job</a></p></div><div class="footer-chunk footer-chunk-chat SiteFooterStyles_hang-qIh3W" id="footer-chunk-chat"><h3>Hang Out</h3><p>🎧 Listen to us chat about running CodePen from every angle on our podcast <a href="https://blog.codepen.io/radio/">CodePen Radio</a>.</p><p>💬 Chat with the CodePen Community <a href="https://spectrum.chat/codepen">over on Spectrum</a>.</p><p>🐦 Follow along on <a href="https://twitter.com/CodePen">Twitter</a> and <a href="https://www.instagram.com/codepen/">Instagram</a> for news and all the most interesting stuff happening.</p></div><div class="footer-chunk footer-chunk-ad SiteFooterStyles_ad-3I4Zj" id="footer-chunk-ad" data-test-id="footer-chunk-ad"><div id="bsap_1299665" class="bsarocks bsap_1c0db54f76af90b42e2579401b20ae65"></div></div></div></div><footer class="SiteFooterStyles_linkFooter-1oVdL" id="link-footer"><div class="width-wrapper SiteFooterStyles_linkFooterInside-1gCxR" id="link-footer-width-wrapper"><nav id="link-footer-codepen-links" aria-label="Links about CodePen"><h4>CodePen</h4><a href="https://codepen.io/about/">About</a><a href="http://blog.codepen.io/">Blog</a><a href="http://blog.codepen.io/radio/">Podcast</a><a href="https://codepen.io/advertising/">Advertising</a><a href="http://blog.codepen.io/documentation">Docs</a><a href="https://codepen.io/support/">Support</a><a href="http://blog.codepen.io/shop/">Shop</a></nav><nav id="link-footer-for-links" aria-label="CodePen for different uses"><h4>For</h4><a href="https://codepen.io/pro/teams">Teams</a><a href="https://codepen.io/education">Education</a><a href="https://codepen.io/pro/privacy">Privacy</a><a href="https://codepen.io/blogging">Writing</a><a href="https://codepen.io/embeds">Documentation</a></nav><nav id="link-footer-social-links" aria-label="CodePen on Social Media"><h4>Social</h4><a href="https://codepen.io/challenges/">Challenges</a><a href="https://twitter.com/CodePen">Twitter</a><a href="https://www.facebook.com/CodePen/">Facebook</a><a href="https://www.instagram.com/codepen/">Instagram</a></nav><nav id="link-footer-community-links" aria-label="CodePen Community"><h4>Community</h4><a href="https://spectrum.chat/codepen/">Spectrum</a><a href="https://codepen.io/pro/teams/">Teams</a><a href="https://blog.codepen.io/legal/code-conduct/">Code of Conduct</a><a href="https://codepen.io/jobs/">Jobs</a></nav><div class="SiteFooterStyles_copyright-3gLgd" id="link-footer-copyright"><h1 class="Logo_root-3XNFn" data-test-id="logo"><a href="https://codepen.io/" class="Logo_small-3i6l6"><svg width="20" height="20" class=" icon icon-codepen-box"><use xlink:href="/svg_sprite?v=8885a907#codepen-box"></use></svg><span class="screen-reader-text">CodePen Home</span></a><a href="https://codepen.io/" class="Logo_large-3FckA"><svg width="20" height="20" class=" icon icon-logo" title="CodePen"><use xlink:href="/svg_sprite?v=8885a907#logo"></use></svg><span class="screen-reader-text">CodePen Home</span></a></h1><p>©2019 CodePen</p><p class="slogan"><em>Demo or it didn't happen.</em></p></div></div></footer></div>
<div id="popup-overlay" class="overlay popup-overlay"></div>
<div id="modal-overlay" class="overlay modal-overlay"></div>
<div id="react-popups" class="react-popups"></div>
<noscript>

  <input type="checkbox" class="modal-closing-trick" id="modal-closing-trick">

  <div class="overlay noscript-overlay" style="display: block;"></div>

  <div class="modal modal-message group modal-warning">

    <div class="modal-title">CodePen doesn't work very well without JavaScript.</div>

    <p>We're all for progressive enhancement, but CodePen is a bit unique in that it's all about writing and showing front end code, including JavaScript. It's required to use most of the features of CodePen.</p>

    <p>Need to know how to enable it? <a href="http://enable-javascript.com/" target="_blank" rel="noopener">Go here.</a></p>

    <label class="button button-medium" for="modal-closing-trick">Close this, use anyway.</label>

  </div>

</noscript>
<input type="hidden" id="init-data" value="{&quot;__browser&quot;:{&quot;device&quot;:&quot;unknown&quot;,&quot;mobile&quot;:null,&quot;name&quot;:&quot;chrome&quot;,&quot;platform&quot;:&quot;mac&quot;,&quot;version&quot;:&quot;78&quot;},&quot;__analytics&quot;:{&quot;controllerActionName&quot;:&quot;post&quot;,&quot;controllerName&quot;:&quot;posts&quot;,&quot;enabled&quot;:true},&quot;__remote_addr&quot;:&quot;2402:800:61cd:714:2c14:6678:9f3b:1de7&quot;,&quot;__CPDATA&quot;:{&quot;domain_iframe&quot;:&quot;https://cdpn.io&quot;,&quot;host&quot;:&quot;codepen.io&quot;,&quot;iframe_allow&quot;:&quot;geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media&quot;,&quot;iframe_sandbox&quot;:&quot;allow-forms allow-modals allow-pointer-lock allow-popups allow-presentation allow-same-origin allow-scripts&quot;},&quot;__env&quot;:&quot;production&quot;,&quot;__turnOffJS&quot;:false,&quot;__constants&quot;:{&quot;grid_iframe_sandbox_attributes&quot;:&quot;allow-scripts allow-pointer-lock allow-same-origin&quot;},&quot;__svg_sprite&quot;:&quot;/svg_sprite?v=8885a907&quot;,&quot;__user&quot;:{&quot;anon&quot;:false,&quot;base_url&quot;:&quot;/petixiuxx/&quot;,&quot;current_team_id&quot;:0,&quot;hashid&quot;:&quot;YAArqJ&quot;,&quot;id&quot;:1238415,&quot;itemType&quot;:&quot;user&quot;,&quot;name&quot;:&quot;kaitou&quot;,&quot;owner_id&quot;:&quot;YAArqJYdEzGn&quot;,&quot;paid&quot;:false,&quot;session_hash&quot;:&quot;&quot;,&quot;tier&quot;:0,&quot;username&quot;:&quot;petixiuxx&quot;},&quot;__firestore&quot;:{&quot;config&quot;:{&quot;apiKey&quot;:&quot;AIzaSyBgLAe7N_MdFpuVofMkcQLGwwhUu5tuxls&quot;,&quot;authDomain&quot;:&quot;codepen-store-production.firebaseapp.com&quot;,&quot;databaseURL&quot;:&quot;https://codepen-store-production.firebaseio.com&quot;,&quot;disabled&quot;:false,&quot;projectId&quot;:&quot;codepen-store-production&quot;},&quot;token&quot;:&quot;eyJhbGciOiJSUzI1NiJ9.eyJhdWQiOiJodHRwczovL2lkZW50aXR5dG9vbGtpdC5nb29nbGVhcGlzLmNvbS9nb29nbGUuaWRlbnRpdHkuaWRlbnRpdHl0b29sa2l0LnYxLklkZW50aXR5VG9vbGtpdCIsImNsYWltcyI6eyJvd25lcklkIjoiWUFBcnFKWWRFekduIiwiYWRtaW4iOmZhbHNlfSwiZXhwIjoxNTc1MzA1NzQyLCJpYXQiOjE1NzUzMDIxNDIsImlzcyI6ImZpcmViYXNlLWFkbWluc2RrLThva3lsQGNvZGVwZW4tc3RvcmUtcHJvZHVjdGlvbi5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsInN1YiI6ImZpcmViYXNlLWFkbWluc2RrLThva3lsQGNvZGVwZW4tc3RvcmUtcHJvZHVjdGlvbi5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsInVpZCI6IllBQXJxSiJ9.8mR6XBoAzCAl9fF2rwOuf7E8NzhDMr06X5EFwXiCAWH8yn9kdcPihZwaPVDcsv6m2ERXtZfI7x5aloV0agG6ObMbQ_C92WmW7tP8sjBPtj4N5TWtd2P_m5I8Ve4wQWrHRCx5g-nxv5SnF3ljhNpSjyK_9YMGGG75_pIMQUk41GIhpwgpBqxUuxaq1_zvjjoQVihkMDDXl49ANFhxe9HwsUCq7EfegpNjJT0lqh_wvDiwXs_WbrwqnT8CnG8DGh72ONUyEyLwD1JOuEsuUP87SzUr8CTcShvRvVCyve1mjLU26Zjq38Ig-uWx0wlctRddw81VJ97LznNZH9Dgpotw6w&quot;},&quot;__graphql&quot;:{&quot;data&quot;:{&quot;sessionUser&quot;:{&quot;id&quot;:&quot;YAArqJ&quot;,&quot;name&quot;:&quot;kaitou&quot;,&quot;avatar80&quot;:&quot;https://gravatar.com/avatar/a5e27fb218b1c4e709da8784e6911fee?s=80&amp;d=https://static.codepen.io/assets/avatars/user-avatar-80x80-bdcd44a3bfb9a5fd01eb8b86f9e033fa1a9897c3a15b33adfc2649a002dab1b6.png&quot;,&quot;avatar512&quot;:&quot;https://gravatar.com/avatar/a5e27fb218b1c4e709da8784e6911fee?s=512&amp;d=https://static.codepen.io/assets/avatars/user-avatar-512x512-6e240cf350d2f1cc07c2bed234c3a3bb5f1b237023c204c782622e80d6b212ba.png&quot;,&quot;canCreatePosts&quot;:true,&quot;currentContext&quot;:{&quot;id&quot;:&quot;YAArqJ&quot;,&quot;baseUrl&quot;:&quot;/petixiuxx&quot;,&quot;title&quot;:&quot;kaitou&quot;,&quot;name&quot;:&quot;kaitou&quot;,&quot;avatar80&quot;:&quot;https://gravatar.com/avatar/a5e27fb218b1c4e709da8784e6911fee?s=80&amp;d=https://static.codepen.io/assets/avatars/user-avatar-80x80-bdcd44a3bfb9a5fd01eb8b86f9e033fa1a9897c3a15b33adfc2649a002dab1b6.png&quot;,&quot;avatar512&quot;:&quot;https://gravatar.com/avatar/a5e27fb218b1c4e709da8784e6911fee?s=512&amp;d=https://static.codepen.io/assets/avatars/user-avatar-512x512-6e240cf350d2f1cc07c2bed234c3a3bb5f1b237023c204c782622e80d6b212ba.png&quot;,&quot;username&quot;:&quot;petixiuxx&quot;,&quot;contextType&quot;:&quot;USER&quot;,&quot;projectLimitations&quot;:{&quot;projects&quot;:1,&quot;usedProjects&quot;:0,&quot;__typename&quot;:&quot;ProjectLimitations&quot;},&quot;privateByDefault&quot;:false,&quot;__typename&quot;:&quot;User&quot;},&quot;currentTeamId&quot;:null,&quot;baseUrl&quot;:&quot;/petixiuxx&quot;,&quot;username&quot;:&quot;petixiuxx&quot;,&quot;admin&quot;:false,&quot;anon&quot;:false,&quot;pro&quot;:false,&quot;teams&quot;:[],&quot;permissions&quot;:{&quot;canCreatePrivate&quot;:false,&quot;__typename&quot;:&quot;UserPermissions&quot;},&quot;__typename&quot;:&quot;User&quot;}}},&quot;__item&quot;:{&quot;hashid&quot;:&quot;ZeVEJn&quot;,&quot;itemType&quot;:&quot;post&quot;,&quot;last_updated&quot;:1465015649.0,&quot;owner_id&quot;:&quot;eQNzdRYdEzGn&quot;,&quot;permalink&quot;:&quot;javascript-hillclimbing-substitution-cipher-breaker&quot;,&quot;published_at&quot;:&quot;2016-06-03T14:39:36.000Z&quot;,&quot;slug_hash&quot;:&quot;javascript-hillclimbing-substitution-cipher-breaker&quot;,&quot;slug_hash_private&quot;:null,&quot;title&quot;:&quot;JavaScript Hillclimbing Substitution Cipher Breaker&quot;},&quot;__profiled&quot;:{&quot;id&quot;:231228,&quot;hashid&quot;:&quot;eQNzdR&quot;,&quot;name&quot;:&quot;Caleb OLeary&quot;,&quot;username&quot;:&quot;caleboleary&quot;,&quot;type&quot;:&quot;user&quot;,&quot;is_team&quot;:false,&quot;base_url&quot;:&quot;/caleboleary&quot;},&quot;__pageType&quot;:&quot;posts&quot;}">
<script src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/everypage-9ab73946e0e7bdf61ba70b8388c769aa1aa644ca2c377232dd419c0d516fe499.js"></script>
<script src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/vendor-664f562babcaade4f8bb.chunk.js"></script>
<script src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/2-b78ff8c4d82543b8d6fb.chunk.js"></script>
<script src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/everypage-f1211b44358357384298.js"></script>
<script src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/index-ebee4db9db2462d0491ac192b31284087de55a694412a3ed5122fa17804272c8.js"></script>
<script src="./JavaScript Hillclimbing Substitution Cipher Breaker by Caleb OLeary on CodePen_files/ei-8f06afaa3427585d4a6f.js"></script>


</body></html>